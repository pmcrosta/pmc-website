
#### Setup ####
options(width = 120)

library(tidyverse)
library(readxl)
library(googlesheets4)
library(googledrive)
library(haven)
library(magrittr)
library(cluster)
library(MASS)
library(tidybayes)
library(ggpmisc)
library(ggrepel)
library(ggfortify)
library(brms)

#### Constants ####

set.seed(2024)
fh_leaid <- "3404950"
fh_staid <- "NJ-251440"
ls_leaid <- "3408790"
ls_staid <- "NJ-252720"
rums_leaid <- "3414370"
rums_staid <- "NJ-254570"
shrews_leaid <- "3414970"
shrews_staid <- "NJ-254770"

####  ACS EDGE Data #### 
"""
Data sourced from [ACS EDGE](https://nces.ed.gov/programs/edge/TableViewer/acsProfile/2022) that contains district-level social, economic, housing, and demographic detail based on the ACS 5-year summary files. Using Population Group: Total Population.

Data was downloaded to local device (zip) and then uploaded to Google Drive for access by this Colab

## Read in Data from Google Sheets
"""

edge_df <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="edge_df")

edge_zips <- drive_find(pattern='edge', type='zip') %>% dplyr::select(name, id)

## download, unzip, and clean up files. create edge_* data frames.

for (ii in 1:nrow(edge_zips)) {
  
  temp <- tempfile(fileext = ".zip")
  dl <- drive_download(
    as_id(edge_zips$id[ii]), path = temp, overwrite = TRUE)
  out <- unzip(temp, exdir = tempdir())
  
  outtxt <- grep(pattern="txt$", x = out, value = T)
  object_name <- str_remove(edge_zips$name[ii], ".zip")
  assign(object_name, read.table(outtxt, sep="|", header=T) %>% dplyr::select(-ends_with("moe")))
  
  outxls <- grep(pattern="xlsx$", x = out, value = T)
  data_dict <- read_excel(outxls, sheet="DP_TotalPop") %>% dplyr::filter(varname %in% colnames(get(object_name)))
  newnames <- data_dict$varname
  names(newnames) <- data_dict$vlabel
  
  duplicate_cols <- duplicated(as.list(get(object_name)))
  df_unique <- get(object_name)[!duplicate_cols]
  newnames <- newnames[newnames %in% colnames(df_unique)]
  
  assign(object_name, df_unique %>% dplyr::rename(all_of(newnames)))
  print(object_name)
}

##### Munge EDGE data #####

ls(pattern="edge*")

edge_edattain_df <- edge_edattain %>%
  dplyr::select(GeoId, Geography, LEAID, starts_with("Percent")) %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE)))

edge_employmentstatus_df <- edge_employmentstatus %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(LEAID, starts_with("Percent")) %>%
  dplyr::select(LEAID, ends_with("__In_labor_force") | contains("Unemployment"))

edge_enrollment_df <- edge_enrollment %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(LEAID, starts_with("Percent"))

edge_householdstype_df <-  edge_householdstype %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(LEAID,
                Percent__Estimate__HOUSEHOLDS_BY_TYPE__Total_households__Married_couple_household__With_children_of_the_householder_under_18_years,
                Number__Estimate__HOUSEHOLDS_BY_TYPE__Total_households__Average_household_size,
                Number__Estimate__HOUSEHOLDS_BY_TYPE__Total_households__Average_family_size)

edge_housing_df <- edge_housing %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(LEAID, Number__Estimate__HOUSING_OCCUPANCY__Total_housing_units)

edge_income_df <- edge_income %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(LEAID,
                Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Median_household_income__dollars_,
                Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Mean_household_income__dollars_,
                Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Median_family_income__dollars_,
                Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Mean_family_income__dollars_,
                Percent__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families___150_000_to__199_999,
                Percent__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families___200_000_or_more,
                Percent__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households___150_000_to__199_999,
                Percent__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households___200_000_or_more) %>%
  dplyr::mutate(
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Median_household_income__dollars_ = str_replace(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Median_household_income__dollars_, fixed("250,000+"), "275000"),
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Mean_household_income__dollars_ = str_replace(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Mean_household_income__dollars_, fixed("250,000+"), "275000"),
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Median_family_income__dollars_ = str_replace(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Median_family_income__dollars_, fixed("250,000+"), "275000"),
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Mean_family_income__dollars_ = str_replace(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Mean_family_income__dollars_, fixed("250,000+"), "275000")
  )

edge_occupation_df <- edge_occupation %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(LEAID, starts_with("Percent"))

edge_race_df <- edge_race %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(LEAID, starts_with("Percent__Estimate__Race_alone_or_in_combination_with_one_or_more_other_races"))

edge_sex_age_df <- edge_sex_age %>%
  rename_with(~ gsub("\\.", "_", make.names(., unique = TRUE))) %>%
  dplyr::select(GeoId, Geography, LEAID, starts_with("Percent")) %>%
  dplyr::select(LEAID, Percent__Estimate__SEX_AND_AGE__Total_population__Under_18_years)

edge_df <- edge_edattain_df %>%
  dplyr::filter(LEAID != "3499999") %>%
  dplyr::left_join(edge_employmentstatus_df, by="LEAID") %>%
  dplyr::left_join(edge_enrollment_df, by="LEAID") %>%
  dplyr::left_join(edge_householdstype_df, by="LEAID") %>%
  dplyr::left_join(edge_housing_df, by="LEAID") %>%
  dplyr::left_join(edge_occupation_df, by="LEAID") %>%
  dplyr::left_join(edge_race_df, by="LEAID") %>%
  dplyr::left_join(edge_sex_age_df, by="LEAID") %>%
  dplyr::left_join(edge_income_df, by="LEAID") %>%
  dplyr::mutate(
    Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__Nursery_school__preschool = as.numeric(Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__Nursery_school__preschool),
    Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__Kindergarten = as.numeric(Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__Kindergarten),
    Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__Elementary_school__grades_1_8_ = as.numeric(Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__Elementary_school__grades_1_8_),
    Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__High_school__grades_9_12_ = as.numeric(Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__High_school__grades_9_12_),
    Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__College_or_graduate_school = as.numeric(Percent__Estimate__SCHOOL_ENROLLMENT__Population_3_years_and_over_enrolled_in_school__College_or_graduate_school),
    
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Median_household_income__dollars_ = as.numeric(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Median_household_income__dollars_),
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Mean_household_income__dollars_ = as.numeric(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Mean_household_income__dollars_),
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Median_family_income__dollars_ = as.numeric(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Median_family_income__dollars_),
    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Mean_family_income__dollars_ = as.numeric(Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Mean_family_income__dollars_)
  )

str(edge_df)

sheet_write(edge_df, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="edge_df")

##### Correlations #####

options(repr.plot.width=18, repr.plot.height=8)

heatmap(cor(na.omit(edge_df[,-c(1:3)])))

#####  Finding peer groups ##### 

colnames(edge_df)

##### Distance ##### 

edge_df_scale <- scale(edge_df[,-c(1:3)])

rownames(edge_df_scale) <- edge_df$LEAID

## compute distance matrix
edge_d <- dist(edge_df_scale, method = "euclidean")

which(attr(edge_d, "Labels")==fh_leaid)

dim(as.matrix(edge_d))

# Find the indices of the closest districts
closest_indices <- order(as.matrix(edge_d)[, 133])

# Print the most similar districts
most_similar_districts <- edge_df[closest_indices, ]
head(most_similar_districts$Geography, 20)

euclid_score <- data.frame(LEAID=as.character(most_similar_districts$LEAID)) %>% dplyr::mutate(euclid_score=1:n())

table(euclid_50 %in% ccdnjk12$LEAID)

# cos_similarities <- cosine(as.matrix(t(edge_df[,-c(1:3)])))
# closest_indices <- order(as.matrix(cos_similarities)[, 133])

# # Print the most similar districts
# most_similar_districts <- edge_df[closest_indices, ]
# tail(most_similar_districts$Geography, 20)

## compute distance matrix
edge_d2 <- dist(edge_df_scale, method = "minkowski")
#Find the indices of the closest districts
closest_indices2 <- order(as.matrix(edge_d2)[, 133])

# Print the most similar districts
most_similar_districts2 <- edge_df[closest_indices2, ]
head(most_similar_districts2$Geography, 20)


##### Hierarchial ##### 

# Hierarchical clustering using Ward and Complete Linkage
hc1 <- hclust(edge_d, method = "ward.D" )
hc2 <- hclust(edge_d, method="complete")

options(repr.plot.width=14, repr.plot.height=8)

# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
rect.hclust(hc1, k = 10) #, border = 2:5)

options(repr.plot.width=14, repr.plot.height=8)

# Plot the obtained dendrogram
plot(hc2, cex = 0.6, hang = -1)
rect.hclust(hc2, k = 10) #, border = 2:5)

hc1_grp10 <- cutree(hc1, k = 10)
fh1 <- hc1_grp10[fh_leaid]
edge_df$hc1_grp10 <- hc1_grp10

fh1

edge_df %>% dplyr::filter(hc1_grp10==fh1) %>% pull(Geography)

table(hc1_grp10)

hc2_grp10 <- cutree(hc2, k = 10)
fh2 <- hc2_grp10[fh_leaid]
edge_df$hc2_grp10 <- hc2_grp10

fh2

table(hc2_grp10)

edge_df %>% dplyr::filter(hc2_grp10==fh2) %>% pull(Geography)

edge_df %>% dplyr::group_by(hc1_grp10) %>%
  dplyr::select(-GeoId, -Geography, -LEAID) %>%
  dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t()

#####  kMEANS ##### 

km1 <- kmeans(edge_d, 15)
fh3 <- km1$cluster[fh_leaid]
edge_df$km15 <- km1$cluster

table(km1$cluster)

edge_df %>% dplyr::filter(km15==fh3) %>% pull(Geography)



##### ### PCA ##### 

# Perform PCA
pcadat <- na.omit(edge_df[,-c(1:3)])
rownames(pcadat) <- make.unique(na.omit(edge_df)$Geography)
pca_result <- prcomp(pcadat, scale.=T, center = T)

# Extract principal components
pca_reduced <- pca_result$x[, 1:2]  # Keep first two components

pca_result$sdev

#Visualize the reduced data
options(repr.plot.width=8, repr.plot.height=8)
plot(pca_reduced, xlab = "PC1", ylab = "PC2", main = "PCA Plot")

options(repr.plot.width=14, repr.plot.height=14)
autoplot(pca_result, data = pcadat,color="hc1_grp10", label = TRUE, label.size = 3)

colnames(fortify(pca_result))

options(repr.plot.width=19, repr.plot.height=14)

ggplot(data=fortify(pca_result) %>% dplyr::mutate(hc1_grp10=as.character(hc1_grp10), Geography=make.unique(na.omit(edge_df)$Geography)),
       aes(x=PC1, y=PC2, color=hc1_grp10)) +
  geom_point()+
  scale_color_discrete(guide="none") +
  geom_text_repel(aes(label=Geography), max.overlaps = 20) +
  theme_minimal()

pca_dist <- dist(pca_reduced)
closest_indices3 <- order(as.matrix(pca_dist)[, 133])
#rownames(pcadat)
# Print the most similar districts
most_similar_districts3 <- edge_df[closest_indices3, ]
#head(most_similar_districts$Geography, 20)

head(most_similar_districts3$Geography, 20)

#### Common Core Data (2023-24) ####

ccdnjk12 <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="ccdnjk12")

# SY2023-2024 Local Education Agency (School District) Universe Survey Data, Preliminary Directory
url <- "https://nces.ed.gov/ccd/Data/zip/ccd_lea_029_2324_w_0a_050824.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())

outcsv <- grep(pattern="csv$", x = out, value = T)
ccd <- read_csv(outcsv)

ccdnjk12 <- ccd %>%
  dplyr::filter(ST=="NJ", LEA_TYPE==1, CHARTER_LEA=="NOTCHR") %>%
  dplyr::filter(G_9_OFFERED=="No", G_10_OFFERED=="No", G_11_OFFERED=="No", G_12_OFFERED=="No", G_13_OFFERED=="No") %>%
  dplyr::filter(GSLO != "05", ! GSHI %in% c("04", "05"))

head(ccdnjk12$LEA_NAME)

table(ccdnjk12$GSHI)
table(ccdnjk12$GSLO)

ccdnjk12 <- ccdnjk12 %>%
  dplyr::left_join(euclid_score, by="LEAID")

as.character(edge_df$LEAID)[edge_df$hc1_grp10==fh1]

ccdnjk12$hc_ward_cluster <- ccdnjk12$LEAID %in% as.character(edge_df$LEAID)[edge_df$hc1_grp10==fh1]
ccdnjk12$hc_complete_cluster <- ccdnjk12$LEAID %in% as.character(edge_df$LEAID)[edge_df$hc2_grp10==fh2]

sheet_write(ccdnjk12, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="ccdnjk12")

####  Financial Data (User Friendly Budgets) #### 

per_pupil_exp <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="per_pupil_exp")

# ## FY 2023-24
# fin_enroll <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2023/download/enroll24.csv") %>% dplyr::mutate(SCHOOL_YEAR="2023-2024", ST_LEAID=paste0("NJ-", county_id, district_id))
# fin_revenue <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2023/download/rev24.csv") %>% dplyr::mutate(SCHOOL_YEAR="2023-2024", ST_LEAID=paste0("NJ-", county_id, district_id))
# fin_approp <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2023/download/approp24.csv") %>% dplyr::mutate(SCHOOL_YEAR="2023-2024", ST_LEAID=paste0("NJ-", county_id, district_id))
# fin_recapit <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2023/download/recap24.csv") %>% dplyr::mutate(SCHOOL_YEAR="2023-2024", ST_LEAID=paste0("NJ-", county_id, district_id))
# fin_perpupil <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2023/download/pupcst24.csv") %>% dplyr::mutate(SCHOOL_YEAR="2023-2024", ST_LEAID=paste0("NJ-", county_id, district_id))
# fin_unusual <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2023/download/unusual24.csv") %>% dplyr::mutate(SCHOOL_YEAR="2023-2024", ST_LEAID=paste0("NJ-", county_id, district_id))
# fin_taxes <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2023/download/esttax24.csv") %>% dplyr::mutate(SCHOOL_YEAR="2023-2024", ST_LEAID=paste0("NJ-", county_id, district_id))

#FY 2024-25
## use year_4	for 2023-24 Revised Budgeted Per Pupil Costs
## use year_2	for 2022-23 Revised Budgeted Per Pupil Costs
## amount_2	10/13/23 Estimated Enrollment Counts
## amount_2	2023-24 Revised Budgeted Revenue Amounts
## amount_2	2023-24 Revised Budgeted Appropriated Amounts
## amount_1	10/13/22  Enrollment Counts
## amount_1	2022-23 Audited Budgeted Revenue Amounts
## amount_1	2022-23 Audited Appropriated Amounts

fin_enroll2425 <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2024/download/enroll25_minus_1.csv") %>% dplyr::mutate(SCHOOL_YEAR="2024-2025", ST_LEAID=paste0("NJ-", county_id, district_id))
fin_revenue2425 <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2024/download/rev25_minus_1.csv") %>% dplyr::mutate(SCHOOL_YEAR="2024-2025", ST_LEAID=paste0("NJ-", county_id, district_id))
fin_approp2425 <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2024/download/approp25_minus_1.csv") %>% dplyr::mutate(SCHOOL_YEAR="2024-2025", ST_LEAID=paste0("NJ-", county_id, district_id))
fin_recapit2425 <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2024/download/recap25_minus_1.csv") %>% dplyr::mutate(SCHOOL_YEAR="2024-2025", ST_LEAID=paste0("NJ-", county_id, district_id))
fin_perpupil2425 <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2024/download/pupcst25_minus_1.csv") %>% dplyr::mutate(SCHOOL_YEAR="2024-2025", ST_LEAID=paste0("NJ-", county_id, district_id))
fin_unusual2425 <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2024/download/unusual25_minus_1.csv") %>% dplyr::mutate(SCHOOL_YEAR="2024-2025", ST_LEAID=paste0("NJ-", county_id, district_id))
fin_taxes2425 <- read_csv("https://www.nj.gov/education/finance/fp/ufb/2024/download/esttax25_minus_1.csv") %>% dplyr::mutate(SCHOOL_YEAR="2024-2025", ST_LEAID=paste0("NJ-", county_id, district_id))

fin_approp2425 %>% dplyr::filter(ST_LEAID==fh_staid) %>% head()

per_pupil_exp <- bind_cols(
  fin_perpupil2425 %>%
    dplyr::filter(line_desc=="Total Budgetary Comparative Per Pupil Cost") %>%
    dplyr::select(district_name, ST_LEAID, per_pupil_cost=year_2),
  
  fin_perpupil2425 %>%
    dplyr::filter(line_desc=="Total Classroom Instruction") %>%
    dplyr::select(per_pupil_class_instruction=year_2),
  
  fin_perpupil2425 %>%
    dplyr::filter(line_desc=="Total Administrative Costs") %>%
    dplyr::select(per_pupil_admin_cost=year_2)
)

fin_perpupil2425 %>%
  dplyr::filter(district_name %in% names(district_name_colors)) %>%
  dplyr::select(district_name, line_desc, year_2)

sheet_write(per_pupil_exp, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="per_pupil_exp")


####  Report Card Data #### 

#rc_comb <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb")
#rc_all_comb <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_all_comb")

#####  Report Card 2022-23 #####

# ## School year 2022-2023 school data
# url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2022-2023/Database_SchoolDetail.xlsx"

# # Download the file temporarily
# temp_file <- tempfile(fileext = ".xlsx")
# download.file(url, destfile = temp_file, mode = "wb")
# sheet_names <- excel_sheets(temp_file)
# print(sheet_names)

## School year 2022-2023 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2022-2023/Database_DistrictStateDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- 3
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename(TotalEnrollment=Total)

nsheet <- 4
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

nsheet <- 10
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentGrowth <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  #dplyr::filter(DistrictCode==1440) %>%
  dplyr::filter(SubGroup=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode, -SubGroup, -StateMedian, -MetTarget) %>%
  pivot_wider(names_from = "Subject", values_from = "DistrictMedian", names_prefix = "mSGP_")

nsheet <- 11
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentGrowthByGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(sub_grade=paste(`ELA/Math`, Grade)) %>%
  dplyr::select(-Level, -Grade, -`ELA/Math`) %>%
  pivot_wider(names_from = "sub_grade", values_from = "mSGP", names_prefix = "mSGP_") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode)

# nsheet <- 12
# assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
# print(paste0(sheet_names_district[nsheet], "_D"))
# get(paste0(sheet_names_district[nsheet], "_D")) %>%
#   dplyr::filter(DistrictCode==1440)

# nsheet <- 13
# assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
# print(paste0(sheet_names_district[nsheet], "_D"))
# get(paste0(sheet_names_district[nsheet], "_D")) %>%
#   dplyr::filter(DistrictCode==1440)

nsheet <- 14
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=`District: % of testers met/exceeded expectations`)

nsheet <- 14
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_dis=`District: % of testers met/exceeded expectations`)

nsheet <- 14
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_notdis=`District: % of testers met/exceeded expectations`)

nsheet <- 15
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAPerformanceTrends <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode)) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename("ELA_ME"=`% Met/Exceeded Expectation`) %>%
  pivot_wider(names_from="Grades", values_from="ELA_ME", names_prefix = "ELA_ME_")

nsheet <- 16
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAPerformanceByGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(ELA_pct_level5=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

nsheet <- 17
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District=`District: % of testers met/exceeded expectations`)

nsheet <- 17
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_dis=`District: % of testers met/exceeded expectations`)

nsheet <- 17
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_notdis=`District: % of testers met/exceeded expectations`)

nsheet <- 18
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathPerformanceTrends <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode)) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename("MATH_ME"=`% Met/Exceeded Expectation`, Grades= `Grades/Subject`) %>%
  pivot_wider(names_from="Grades", values_from="MATH_ME", names_prefix = "MATH_ME_")

nsheet <- 19
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathPerformanceByGradeTest <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`Valid Scores`=="*", "0", `Valid Scores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`% Level 5`=="*", "0", `% Level 5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

MathPerformanceByGradeTest_nogr8 <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide", ! `Grade/Subject` %in% c("Grade 08", "ALG01", "ALG02", "GEO01")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`Valid Scores`=="*", "0", `Valid Scores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`% Level 5`=="*", "0", `% Level 5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5_nogr8=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

nsheet <- 64
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentToStaffRatios <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, Student_Teacher_District, Student_Admin_District)

nsheet <- 60
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

TeachersExperience <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Teacher") | starts_with("Percent")) %>%
  dplyr::select(!ends_with("State"))

nsheet <- 53
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism<- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::filter(StudentGroup=="Districtwide")  %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode, -DistrictName, -StudentGroup, -MetTarget, -Target)

nsheet <- 54
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))
DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear="2022-2023") %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Abs"))

rc_comb <- StudentGrowth %>%
  dplyr::left_join(StudentGrowthByGrade, by=c("ST_LEAID","SchoolYear", "DistrictName")) %>%
  dplyr::left_join(ELAParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAPerformanceTrends, by=c("ST_LEAID","SchoolYear", "DistrictName")) %>%
  dplyr::left_join(ELAPerformanceByGrade, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceTrends, by=c("ST_LEAID","SchoolYear", "DistrictName")) %>%
  dplyr::left_join(MathPerformanceByGradeTest, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest_nogr8, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(StudentToStaffRatios, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(TeachersExperience, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(DaysAbsent, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsbyGrade, by=c("ST_LEAID","SchoolYear"))

#str(rc_comb)

sheet_write(rc_comb, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb")



#####   Report Card 2021-22 #####  

# ## School year 2021-22 school data
# https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2021-2022/Database_SchoolDetail.xlsx
# https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2021-2022/Database_DistrictStateDetail.xlsx

# # Download the file temporarily
# temp_file <- tempfile(fileext = ".xlsx")
# download.file(url, destfile = temp_file, mode = "wb")
# sheet_names <- excel_sheets(temp_file)
# print(sheet_names)

## School year 2021-22 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2021-2022/Database_DistrictStateDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2021-2022"

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- 3
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename(TotalEnrollment=Total)

nsheet <- 4
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

nsheet <- 10
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=`District: % of testers met/exceeded expectations`)

nsheet <- 10
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_dis=`District: % of testers met/exceeded expectations`)

nsheet <- 10
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_notdis=`District: % of testers met/exceeded expectations`)

nsheet <- 11
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAPerformanceTrends <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode)) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename("ELA_ME"=`% Met/Exceeded Expectation`) %>%
  pivot_wider(names_from="Grades", values_from="ELA_ME", names_prefix = "ELA_ME_")

nsheet <- 12
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAPerformanceByGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(ELA_pct_level5=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

nsheet <- 13
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District=`District: % of testers met/exceeded expectations`)

nsheet <- 13
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_dis=`District: % of testers met/exceeded expectations`)

nsheet <- 13
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Groups`=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_notdis=`District: % of testers met/exceeded expectations`)

nsheet <- 14
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathPerformanceTrends <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode)) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename("MATH_ME"=`% Met/Exceeded Expectation`, Grades= `Grades/Subject`) %>%
  pivot_wider(names_from="Grades", values_from="MATH_ME", names_prefix = "MATH_ME_")

nsheet <- 15
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathPerformanceByGradeTest <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`Valid Scores`=="*", "0", `Valid Scores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`% Level 5`=="*", "0", `% Level 5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

MathPerformanceByGradeTest_nogr8 <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide", ! `Grade/Subject` %in% c("Grade 08", "ALG01", "ALG02", "GEO01")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`Valid Scores`=="*", "0", `Valid Scores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`% Level 5`=="*", "0", `% Level 5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5_nogr8=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

nsheet <- 61
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentToStaffRatios <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, Student_Teacher_District, Student_Admin_District)

nsheet <- 57
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

TeachersExperience <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Teacher") | starts_with("Percent")) %>%
  dplyr::select(!ends_with("State"))

nsheet <- 50
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism<- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::filter(StudentGroup=="Districtwide")  %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode, -DistrictName, -StudentGroup, -MetTarget, -Target)

nsheet <- 51
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))
DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Abs"))

rc_comb2122 <- ELAParticipationPerformance %>%
  #StudentGrowth %>%
  #dplyr::left_join(StudentGrowthByGrade, by=c("ST_LEAID","SchoolYear", "DistrictName")) %>%
  #dplyr::left_join(ELAParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAPerformanceTrends, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAPerformanceByGrade, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceTrends, by=c("ST_LEAID","SchoolYear", "DistrictName")) %>%
  dplyr::left_join(MathPerformanceByGradeTest, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest_nogr8, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(StudentToStaffRatios, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(TeachersExperience, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(DaysAbsent, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsbyGrade, by=c("ST_LEAID","SchoolYear"))

sheet_write(rc_comb2122, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb2122")



#####   Report Card 2020-21 (no testing data) #####  

# ## School year 2020-21 school data
# https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2020-2021/Database_DistrictStateDetail.xlsx

# # Download the file temporarily
# temp_file <- tempfile(fileext = ".xlsx")
# download.file(url, destfile = temp_file, mode = "wb")
# sheet_names <- excel_sheets(temp_file)
# print(sheet_names)

## School year 2020-21 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2020-2021/Database_DistrictStateDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2020-2021"

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- 3
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename(TotalEnrollment=Total)

nsheet <- 4
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

# nsheet <- 10
# assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
# print(paste0(sheet_names_district[nsheet], "_D"))

# ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
#   dplyr::filter(Subject=="ELA") %>%
#   dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
#   dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
#   dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=StatewideProficiencyRateforFederalAccountability, ELA_ME_District_Fed=ProficiencyRateforFederalAccountability)

# nsheet <- 10
# assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
# print(paste0(sheet_names_district[nsheet], "_D"))

# MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
#   dplyr::filter(Subject=="Math") %>%
#   dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
#   dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
#   dplyr::select(ST_LEAID, SchoolYear, Math_ME_District=StatewideProficiencyRateforFederalAccountability, Math_ME_District_Fed=ProficiencyRateforFederalAccountability)

nsheet <- 55
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentToStaffRatios <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, Student_Teacher_District, Student_Admin_District)

nsheet <- 52
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

TeachersExperience <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Teacher") | starts_with("Percent")) %>%
  dplyr::select(!ends_with("State"))

nsheet <- 45
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism<- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::filter(StudentGroup=="Districtwide")  %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode, -DistrictName, -StudentGroup, -MetTarget, -Target)

nsheet <- 46
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))
DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Abs"))

rc_comb2021 <- StudentToStaffRatios %>%
  #ELAParticipationPerformance %>%
  #dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  #dplyr::left_join(StudentToStaffRatios, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(TeachersExperience, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(DaysAbsent, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsbyGrade, by=c("ST_LEAID","SchoolYear"))

sheet_write(rc_comb2021, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb2021")

#####   Report Card 2019-20 (no testing data) #####  

## School year 2019-20 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2019-2020/Database_DistrictStateDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2019-2020"

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- which(sheet_names_district=="EnrollmentTrendsbyGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename(TotalEnrollment=Total)

nsheet <- which(sheet_names_district=="EnrollmentTrendsByStudentGroup")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

nsheet <- which(sheet_names_district=="StudentToStaffRatios")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentToStaffRatios <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, Student_Teacher_District, Student_Admin_District)

nsheet <- which(sheet_names_district=="TeachersExperience")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

TeachersExperience <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Teacher") | starts_with("Percent")) %>%
  dplyr::select(!ends_with("State"))

# nsheet <- 45
# assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
# print(paste0(sheet_names_district[nsheet], "_D"))

# ChronicAbsenteeism<- get(paste0(sheet_names_district[nsheet], "_D")) %>%
#   dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
#   dplyr::filter(StudentGroup=="Districtwide")  %>%
#   dplyr::select(-CountyCode, -CountyName, -DistrictCode, -DistrictName, -StudentGroup, -MetTarget, -Target)

# nsheet <- 46
# assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
# print(paste0(sheet_names_district[nsheet], "_D"))
# DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
#   dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
#   dplyr::select(ST_LEAID, SchoolYear, starts_with("Abs"))

rc_comb1920 <- StudentToStaffRatios %>%
  #ELAParticipationPerformance %>%
  #dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(TeachersExperience, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(EnrollmentTrendsbyGrade, by=c("ST_LEAID","SchoolYear"))

sheet_write(rc_comb1920, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1920")

#####   Report Card 2018-19 #####  

## School year 2018-19 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2018-2019/Database_DistrictStateDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2018-2019"

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- which(sheet_names_district=="EnrollmentTrendsbyGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename(TotalEnrollment=Total)

nsheet <- which(sheet_names_district=="EnrollmentTrendsByStudentGroup")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_dis=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_notdis=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyPerformanceByGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAPerformanceByGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(n_level5=(as.numeric(LEVEL_5)/100)*as.numeric(ValidScores)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(ELA_pct_level5=sum(n_level5)/sum(as.numeric(ValidScores))) %>%
  dplyr::ungroup()

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_dis=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_notdis=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathPerformanceByGradeTest")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathPerformanceByGradeTest <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`ValidScores`=="*", "0", `ValidScores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`LEVEL_5`=="*", "0", `LEVEL_5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

MathPerformanceByGradeTest_nogr8 <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide", ! `Grade` %in% c("Grade 08", "ALG01", "ALG02", "GEO01")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`ValidScores`=="*", "0", `ValidScores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`LEVEL_5`=="*", "0", `LEVEL_5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5_nogr8=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

nsheet <- which(sheet_names_district=="StudentToStaffRatios")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentToStaffRatios <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, Student_Teacher_District, Student_Admin_District)

nsheet <- which(sheet_names_district=="TeachersExperience")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

TeachersExperience <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Teacher") | starts_with("Percent")) %>%
  dplyr::select(!ends_with("State"))

nsheet <- which(sheet_names_district=="ChronicAbsenteeism")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism<- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::filter(StudentGroup=="Districtwide")  %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode, -DistrictName, -StudentGroup, -MetTarget, -Target)

nsheet <- which(sheet_names_district=="DaysAbsent")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))
DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Abs"))

rc_comb1819 <- EnrollmentTrendsbyGrade %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAPerformanceByGrade, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest_nogr8, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(StudentToStaffRatios, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(TeachersExperience, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(DaysAbsent, by=c("ST_LEAID","SchoolYear"))

str(rc_comb1819)

sheet_write(rc_comb1819, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1819")



#####   Report Card 2017-18 #####  

## School year 2017-18 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2017-2018/Database_DistrictStateDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2017-2018"

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- which(sheet_names_district=="EnrollmentTrendsbyGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::rename(TotalEnrollment=Total)

nsheet <- which(sheet_names_district=="EnrollmentTrendsByStudentGroup")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_dis=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_notdis=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyPerformanceByGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAPerformanceByGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(n_level5=(as.numeric(LEVEL_5)/100)*as.numeric(ValidScores)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(ELA_pct_level5=sum(n_level5)/sum(as.numeric(ValidScores))) %>%
  dplyr::ungroup()

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_dis=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_notdis=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathPerformanceByGradeTest")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathPerformanceByGradeTest <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`ValidScores`=="*", "0", `ValidScores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`LEVEL_5`=="*", "0", `LEVEL_5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

MathPerformanceByGradeTest_nogr8 <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`Student Group`=="Districtwide", ! `Grade` %in% c("Grade 08", "ALG01", "ALG02", "GEO01")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`ValidScores`=="*", "0", `ValidScores`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`LEVEL_5`=="*", "0", `LEVEL_5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5_nogr8=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

nsheet <- which(sheet_names_district=="StudentToStaffRatios")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentToStaffRatios <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, Student_Teacher_District, Student_Admin_District)

nsheet <- which(sheet_names_district=="TeachersExperienceCertification")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

TeachersExperience <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Teacher") | starts_with("Percent")) %>%
  dplyr::select(!ends_with("State"))

nsheet <- which(sheet_names_district=="ChronicAbsenteeism")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism<- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::filter(StudentGroup=="Districtwide")  %>%
  dplyr::select(-CountyCode, -CountyName, -DistrictCode, -DistrictName, -StudentGroup, -MetTarget, -Target)

nsheet <- which(sheet_names_district=="DaysAbsent")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))
DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Abs"))

rc_comb1718 <- EnrollmentTrendsbyGrade %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAPerformanceByGrade, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest_nogr8, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(StudentToStaffRatios, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(TeachersExperience, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(DaysAbsent, by=c("ST_LEAID","SchoolYear"))

str(rc_comb1718)

sheet_write(rc_comb1718, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1718")



##### Report Card 2016-17 #####  

## School year 2016-17 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2016-2017/Database_DistrictStateDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2016-2017"

#New Jersey transitioned to the PARCC exams in mathematics and ELA beginning in the 2014-15 school year.

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- which(sheet_names_district=="EnrollmentTrendsByGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  pivot_wider(names_from="Grade", values_from = "Count") %>%
  dplyr::rename_with(~str_remove_all(., " "), .cols = everything())

nsheet <- which(sheet_names_district=="EnrollmentTrendsByStudentGroup")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  pivot_wider(names_from="StudentGroup", values_from = "Percent") %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_dis=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_notdis=DistrictPerformance)

nsheet <- which(sheet_names_district=="ELALiteracyPerformanceByGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAPerformanceByGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`StudentGroup`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::mutate(n_level5=(as.numeric(LEVEL_5)/100)*as.numeric(`VALID SCORES`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(ELA_pct_level5=sum(n_level5)/sum(as.numeric(`VALID SCORES`))) %>%
  dplyr::ungroup()

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students with Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_dis=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathParticipationPerform")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_notdis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(StudentGroup=="Students without Disabilities") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_notdis=DistrictPerformance)

nsheet <- which(sheet_names_district=="MathPerformanceByGradeTest")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathPerformanceByGradeTest <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`StudentGroup`=="Districtwide") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`VALID SCORES`=="*", "0", `VALID SCORES`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`LEVEL_5`=="*", "0", `LEVEL_5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

MathPerformanceByGradeTest_nogr8 <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(`StudentGroup`=="Districtwide", ! `Grade_Subject` %in% c("Grade 08", "ALG01", "ALG02", "GEO01")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::mutate(`Valid Scores`=if_else(`VALID SCORES`=="*", "0", `VALID SCORES`)) %>%
  dplyr::mutate(`% Level 5`=if_else(`LEVEL_5`=="*", "0", `LEVEL_5`)) %>%
  dplyr::mutate(n_level5=(as.numeric(`% Level 5`)/100)*as.numeric(`Valid Scores`)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(MATH_pct_level5_nogr8=sum(n_level5)/sum(as.numeric(`Valid Scores`)))

nsheet <- which(sheet_names_district=="StudentToStaffRatios")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

StudentToStaffRatios <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, Student_Teacher_District=TeacherRatio, Student_Admin_District=AdministratorsRatio)

nsheet <- which(sheet_names_district=="TeachersExperienceCertification")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

TeachersExperience <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::select(-CountyCode, -DistrictCode) %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Teacher") | starts_with("Percent")) %>%
  dplyr::select(!ends_with("State"))

nsheet <- which(sheet_names_district=="ChronicAbsenteeism")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism<- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  dplyr::filter(StudentGroup=="Districtwide")  %>%
  dplyr::select(-CountyCode, -DistrictCode, -StudentGroup, -MetTarget, -Target)

nsheet <- which(sheet_names_district=="DaysAbsent")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
  pivot_wider(names_from="Subgroup", values_from="PCT") %>%
  dplyr::rename(Abs_0=`0 Absences`,	`Abs_1-5`=`1-5 Absences`,	`Abs_6-10`=`6-10 Absences`,	`Abs_11-15`=`11-15 Absences`, `Abs_over15`=`15+ Absences`) %>%
  dplyr::select(-CountyCode, -DistrictCode)

rc_comb1617 <- EnrollmentTrendsbyGrade %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAPerformanceByGrade, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_notdis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathPerformanceByGradeTest_nogr8, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(StudentToStaffRatios, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(TeachersExperience, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(DaysAbsent, by=c("ST_LEAID","SchoolYear"))

sheet_write(rc_comb1617, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1617")


#####   Report Card 2015-16 #####  

## School year 2015-16 district data
url <- "https://navilp7rg08njprsharedst.blob.core.windows.net/perf-reports-ct/DataFiles/2015-2016/Database_SchoolDetail.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2015-2016"

## looks like a parcc year

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- which(sheet_names_district=="EnrollmentByGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::mutate(across(PK:RowTotal, ~replace_na(as.numeric(.), 0)))  %>%
  dplyr::rename(GradePK=PK, GradeKG=KG) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(across(where(is.numeric), \(x) sum(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::rename(TotalEnrollment=RowTotal)

nsheet <- which(sheet_names_district=="EnrollmentByGrade")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTotalsBySchool <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::mutate(across(PK:RowTotal, ~replace_na(as.numeric(.), 0)))  %>%
  dplyr::rename(GradePK=PK, GradeKG=KG) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(across(where(is.numeric), \(x) sum(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::rename(TotalEnrollment=RowTotal)

nsheet <- which(sheet_names_district=="EnrollmentBySpecPop")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsByStudentGroup <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE, -LEP) %>%
  dplyr::rename(`Students with Disabilities`=Disability, `Economically Disadvantaged Students`=`Economically Disadvantaged`) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(`Students with Disabilities`=TotalEnrollment*`Students with Disabilities`/100) %>%
  dplyr::mutate(`Economically Disadvantaged Students`=TotalEnrollment*`Economically Disadvantaged Students`/100) %>%
  #dplyr::filter(startsWith(ST_LEAID, fh_staid)) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(`Students with Disabilities`=round(100*sum(`Students with Disabilities`)/sum(TotalEnrollment))) %>%
  dplyr::mutate(`Economically Disadvantaged Students`=round(100*sum(`Economically Disadvantaged Students`)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`, `Economically Disadvantaged Students`)

EnrollmentDisBySchool <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE, -LEP) %>%
  dplyr::rename(`Students with Disabilities`=Disability, `Economically Disadvantaged Students`=`Economically Disadvantaged`) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(`Students with Disabilities`=TotalEnrollment*`Students with Disabilities`/100) %>%
  dplyr::select(ST_LEAID, SchoolYear, `Students with Disabilities`)

nsheet <- which(sheet_names_district=="PARCC_ELA_MetExcMathEng")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(Type=="Schoolwide", !VALID_SCORES %in% c("S", "N")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=`SchoolPerf/MetStandards`) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(ELA_ME_District=TotalEnrollment*as.numeric(ELA_ME_District)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(ELA_ME_District=round(100*sum(ELA_ME_District)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District)

nsheet <- which(sheet_names_district=="PARCC_ELA_MetExcMathEng")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(Type=="Students with Disability", !VALID_SCORES %in% c("S", "N")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_dis=`SchoolPerf/MetStandards`) %>%
  dplyr::left_join(EnrollmentDisBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(ELA_ME_District_dis=`Students with Disabilities`*as.numeric(ELA_ME_District_dis)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(ELA_ME_District_dis=round(100*sum(ELA_ME_District_dis)/sum(`Students with Disabilities`))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District_dis)

# nsheet <- which(sheet_names_district=="PARCC_ELA_Distribution")
# assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
# print(paste0(sheet_names_district[nsheet], "_D"))

# ELAPerformanceByGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
#   dplyr::filter(`StudentGroup`=="Districtwide") %>%
#   dplyr::mutate(ST_LEAID=paste0("NJ-", CountyCode, DistrictCode), SchoolYear=sy) %>%
#   dplyr::select(-CountyCode, -DistrictCode) %>%
#   dplyr::mutate(n_level5=(as.numeric(LEVEL_5)/100)*as.numeric(`VALID SCORES`)) %>%
#   dplyr::group_by(ST_LEAID, SchoolYear) %>%
#   dplyr::summarize(ELA_pct_level5=sum(n_level5)/sum(as.numeric(`VALID SCORES`))) %>%
#   dplyr::ungroup()



nsheet <- which(sheet_names_district=="PARCC_Math_MetExcMathEng")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(Type=="Schoolwide", !VALID_SCORES %in% c("S", "N")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District=`SchoolPerf/MetStandards`) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(MATH_ME_District=TotalEnrollment*as.numeric(MATH_ME_District)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(MATH_ME_District=round(100*sum(MATH_ME_District)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District)

nsheet <- which(sheet_names_district=="PARCC_Math_MetExcMathEng")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance_dis <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(Type=="Students with Disability", !VALID_SCORES %in% c("S", "N")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_dis=`SchoolPerf/MetStandards`) %>%
  dplyr::left_join(EnrollmentDisBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(MATH_ME_District_dis=`Students with Disabilities`*as.numeric(MATH_ME_District_dis)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(MATH_ME_District_dis=round(100*sum(MATH_ME_District_dis)/sum(`Students with Disabilities`))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District_dis)

nsheet <- which(sheet_names_district=="ChronicAbsenteeism")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, Chronic_Abs_Pct=SchoolChronicAbsenteeism) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(Chronic_Abs_Pct=TotalEnrollment*as.numeric(Chronic_Abs_Pct)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(Chronic_Abs_Pct=round(100*sum(Chronic_Abs_Pct)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup()  %>%
  dplyr::select(ST_LEAID, SchoolYear, Chronic_Abs_Pct)

nsheet <- which(sheet_names_district=="Absenteeism")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))


DaysAbsent <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::rename(Abs_0=`0Absences`,	`Abs_1-5`=`1-5Absences`,	`Abs_6-10`=`6-10Absences`,	`Abs_11-15`=`11-15Absences`, `Abs_over15`=`15+Absences`) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(Abs_0=TotalEnrollment*as.numeric(Abs_0)/100) %>%
  dplyr::mutate(`Abs_1-5`=TotalEnrollment*as.numeric(`Abs_1-5`)/100) %>%
  dplyr::mutate(`Abs_6-10`=TotalEnrollment*as.numeric(`Abs_6-10`)/100) %>%
  dplyr::mutate(`Abs_11-15`=TotalEnrollment*as.numeric(`Abs_11-15`)/100) %>%
  dplyr::mutate(`Abs_over15`=TotalEnrollment*as.numeric(`Abs_over15`)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(Abs_0=round(100*sum(Abs_0)/sum(TotalEnrollment))) %>%
  dplyr::mutate(`Abs_6-10`=round(100*sum(`Abs_6-10`)/sum(TotalEnrollment))) %>%
  dplyr::mutate(`Abs_1-5`=round(100*sum(`Abs_1-5`)/sum(TotalEnrollment))) %>%
  dplyr::mutate(`Abs_11-15`=round(100*sum(`Abs_11-15`)/sum(TotalEnrollment))) %>%
  dplyr::mutate(`Abs_over15`=round(100*sum(`Abs_over15`)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup()  %>%
  dplyr::select(ST_LEAID, SchoolYear, starts_with("Abs"))

rc_comb1516 <- EnrollmentTrendsbyGrade %>%
  dplyr::left_join(EnrollmentTrendsByStudentGroup, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ELAParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance_dis, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(DaysAbsent, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::mutate(across(where(is.numeric), \(x) if_else(is.infinite(x), NA, x)))

sheet_write(rc_comb1516, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1516")

#####   Report Card 2014-15 #####  

## School year 2014-15 district data
url <- "https://nj.gov/education/schoolperformance/archive/201415/2015PRDATABASE.xlsx"

# Download the file temporarily
rc_district <- tempfile(fileext = ".xlsx")
download.file(url, destfile = rc_district, mode = "wb")
sy <- "2014-2015"

#New Jersey transitioned to the PARCC exams in mathematics and ELA beginning in the 2014-15 school year.
## So this should be first year where everyone used PARCC

sheet_names_district <- excel_sheets(rc_district)
print(sheet_names_district)

nsheet <- which(sheet_names_district=="ENROLLMENT")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTrendsbyGrade <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `CO CODE`, `DIST CODE`), SchoolYear=sy) %>%
  dplyr::select(-`CO CODE`, -`DIST CODE`, -`SCH CODE`) %>%
  dplyr::mutate(across(PK:ROWTOTAL, ~replace_na(as.numeric(.), 0)))  %>%
  dplyr::rename(GradePK=PK, GradeKG=KG, Grade01=GRADE01,
                Grade02=GRADE02,
                Grade03=GRADE03,
                Grade04=GRADE04,
                Grade05=GRADE05,
                Grade06=GRADE06,
                Grade07=GRADE07,
                Grade08=GRADE08,
                Grade09=GRADE09,
                Grade10=GRADE10,
                Grade11=GRADE11,
                Grade12=GRADE12) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(across(where(is.numeric), \(x) sum(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::rename(TotalEnrollment=ROWTOTAL)

nsheet <- which(sheet_names_district=="ENROLLMENT")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

EnrollmentTotalsBySchool <-   get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `CO CODE`, `DIST CODE`, `SCH CODE`), SchoolYear=sy) %>%
  dplyr::select(-`CO CODE`, -`DIST CODE`, -`SCH CODE`) %>%
  dplyr::mutate(across(PK:ROWTOTAL, ~replace_na(as.numeric(.), 0)))  %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::summarize(across(where(is.numeric), \(x) sum(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::rename(TotalEnrollment=ROWTOTAL) %>%
  dplyr::select(ST_LEAID, SchoolYear, TotalEnrollment)

nsheet <- which(sheet_names_district=="PARCC ELA")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ELAParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(TYPE=="Schoolwide", !`VALID SCORES` %in% c("S", "N")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District=`MET_EXCEED`) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(ELA_ME_District=TotalEnrollment*as.numeric(ELA_ME_District)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(ELA_ME_District=round(100*sum(ELA_ME_District)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::select(ST_LEAID, SchoolYear, ELA_ME_District)

nsheet <- which(sheet_names_district=="PARCC MATH")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

MathParticipationPerformance <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::filter(TYPE=="Schoolwide", !`VALID SCORES` %in% c("S", "N")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District=`MET_EXCEED`) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(MATH_ME_District=TotalEnrollment*as.numeric(MATH_ME_District)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(MATH_ME_District=round(100*sum(MATH_ME_District)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup() %>%
  dplyr::select(ST_LEAID, SchoolYear, MATH_ME_District)

nsheet <- which(sheet_names_district=="CHRONIC ABSENTEEISM")
assign(paste0(sheet_names_district[nsheet], "_D"), read_excel(rc_district, sheet=sheet_names_district[nsheet]))
print(paste0(sheet_names_district[nsheet], "_D"))

ChronicAbsenteeism <- get(paste0(sheet_names_district[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_CODE, DISTRICT_CODE, SCHOOL_CODE), SchoolYear=sy) %>%
  dplyr::select(-COUNTY_CODE, -DISTRICT_CODE, -SCHOOL_CODE) %>%
  dplyr::select(ST_LEAID, SchoolYear, Chronic_Abs_Pct=PERCENT_CHRONIC_ABSENT) %>%
  dplyr::left_join(EnrollmentTotalsBySchool, by=c("ST_LEAID", "SchoolYear")) %>%
  dplyr::mutate(Chronic_Abs_Pct=TotalEnrollment*as.numeric(Chronic_Abs_Pct)/100) %>%
  dplyr::mutate(ST_LEAID= str_sub(ST_LEAID, start=1, end=9)) %>%
  dplyr::group_by(ST_LEAID, SchoolYear) %>%
  dplyr::mutate(Chronic_Abs_Pct=round(100*sum(Chronic_Abs_Pct)/sum(TotalEnrollment))) %>%
  dplyr::summarize(across(where(is.numeric), \(x) max(x, na.rm = TRUE))) %>%
  dplyr::ungroup()  %>%
  dplyr::select(ST_LEAID, SchoolYear, Chronic_Abs_Pct)

rc_comb1415 <- EnrollmentTrendsbyGrade %>%
  dplyr::left_join(ELAParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(MathParticipationPerformance, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::left_join(ChronicAbsenteeism, by=c("ST_LEAID","SchoolYear")) %>%
  dplyr::mutate(across(where(is.numeric), \(x) if_else(is.infinite(x), NA, x)))

str(rc_comb1415)

sheet_write(rc_comb1415, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1415")

#####   All Report Cards #####  

rc_comb2223 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb", col_types = "c")
rc_comb2122 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb2122", col_types = "c")
rc_comb2021 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb2021", col_types = "c")
rc_comb1920 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1920", col_types = "c")
rc_comb1819 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1819", col_types = "c")
rc_comb1718 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1718", col_types = "c")
rc_comb1617 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1617", col_types = "c")
rc_comb1516 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1516", col_types = "c")
rc_comb1415 <- read_sheet( ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb1415", col_types = "c")

rc_all_comb <- bind_rows(rc_comb2223 %>% dplyr::select(-DistrictName.y), rc_comb2122, rc_comb2021,  rc_comb1920, rc_comb1819, rc_comb1718, rc_comb1617, rc_comb1516, rc_comb1415)

sheet_write(rc_all_comb, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_all_comb")

str(rc_all_comb)

rc_all_comb %>% dplyr::filter(ST_LEAID == fh_staid) %>%
  dplyr::select(SchoolYear, DistrictName.x, ELA_ME_District, MATH_ME_District) %>%
  arrange(SchoolYear)

rc_all_comb %>% dplyr::filter(ST_LEAID == rums_staid) %>%
  dplyr::select(SchoolYear, DistrictName.x, ELA_ME_District, MATH_ME_District) %>%
  arrange(SchoolYear)

rc_all_comb %>% dplyr::filter(ST_LEAID == ls_staid) %>%
  dplyr::select(SchoolYear, DistrictName.x, ELA_ME_District, MATH_ME_District) %>%
  arrange(SchoolYear)

####  Bring the data together #### 
"""
Join Financial, Common Core (for crosswalk), and report card data
"""

edge_df <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="edge_df")
ccdnjk12 <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="ccdnjk12")
per_pupil_exp <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="per_pupil_exp")
rc_comb <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_comb")

comb <- ccdnjk12 %>%
  dplyr::left_join(per_pupil_exp, by="ST_LEAID") %>%
  dplyr::left_join(rc_comb, by="ST_LEAID") %>%
  dplyr::left_join(edge_df %>% dplyr::mutate(LEAID=as.character(LEAID)), by="LEAID")

names(comb)[sapply(comb, is.character)]

comb <- comb %>%
  dplyr::mutate(across(starts_with("per_pupil"), as.numeric)) %>%
  dplyr::mutate(across(starts_with("mSGP"), as.numeric)) %>%
  dplyr::mutate(across(starts_with("ELA"), as.numeric)) %>%
  dplyr::mutate(across(starts_with("MATH"), as.numeric)) %>%
  dplyr::mutate(across(starts_with("Chronic"), as.numeric)) %>%
  dplyr::mutate(across(starts_with("Abs_"), as.numeric)) %>%
  dplyr::mutate(across(starts_with("Teacher_"), as.numeric)) %>%
  dplyr::mutate(across(starts_with("Percentage"), as.numeric)) %>%
  dplyr::mutate(student_teacher_ratio = sub(":.*", "", Student_Teacher_District),
                student_admin_ratio = sub(":.*", "", Student_Admin_District))

sheet_write(comb, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="comb")

colnames(comb)

####  Analysis #### 

comb <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="comb")

district_name_colors <- c(
  "Fair Haven Boro" = "#4169E1",
  "Little Silver Boro" = "#1F2868",
  "Rumson Boro" = "#8640C4",
  "Shrewsbury Boro" = "#004500",
  "Other" = "darkgrey"
)

comb <- comb %>%
  dplyr::mutate(dist_colors = case_when(
    district_name %in% names(district_name_colors) ~ district_name,
    TRUE ~ "Other"
  ))

comb$euclidLT100SizeLT2000 <- comb$euclid_score<100 & as.numeric(comb$TotalEnrollment)<2000

rc_all_comb <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="rc_all_comb")

##### Per pupil costs #####

### Total

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  {
    ggplot(data=., aes(x=per_pupil_cost)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 1000, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_cost, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Budgetary Comparative Per Pupil Cost", y="Density") +
      ggtitle("Total District Per Pupil Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_cost)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_cost)) %>%
  {
    ggplot(data=., aes(x=per_pupil_cost, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Budgetary Comparative Per Pupil Cost", y="") +
      ggtitle("Total District Per Pupil Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_cost)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_cost, x=per_pupil_cost), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  {
    ggplot(data=., aes(x=per_pupil_cost)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 1000, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_cost, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Budgetary Comparative Per Pupil Cost", y="Density") +
      ggtitle("Total District Per Pupil Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_cost)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclid_score < 200) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_cost)) %>%
  {
    ggplot(data=., aes(x=per_pupil_cost, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Budgetary Comparative Per Pupil Cost", y="") +
      ggtitle("Total District Per Pupil Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_cost)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_cost, x=per_pupil_cost), size=1, hjust=-.1) +
      theme( axis.text.y = element_text(size=4))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(hc_complete_cluster) %>%
  {
    ggplot(data=., aes(x=per_pupil_cost)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 1000, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_cost, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Budgetary Comparative Per Pupil Cost", y="Density") +
      ggtitle("Total District Per Pupil Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_cost)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(hc_complete_cluster) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_cost)) %>%
  {
    ggplot(data=., aes(x=per_pupil_cost, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Budgetary Comparative Per Pupil Cost", y="") +
      ggtitle("Total District Per Pupil Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_cost)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_cost, x=per_pupil_cost), size=3, hjust=-.1) +
      theme( axis.text.y = element_text(size=8))
  }

"""### Instructional"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  {
    ggplot(data=., aes(x=per_pupil_class_instruction)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 1000, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_class_instruction, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Per Pupil Classroom Instruction", y="Density") +
      ggtitle("Total District Per Pupil Classroom Instruction in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_class_instruction)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_class_instruction)) %>%
  {
    ggplot(data=., aes(x=per_pupil_class_instruction, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Per Pupil Classroom Instruction", y="") +
      ggtitle("Total District Per Pupil Classroom Instruction in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_class_instruction)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_class_instruction, x=per_pupil_class_instruction), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclid_score < 200) %>%
  {
    ggplot(data=., aes(x=per_pupil_class_instruction)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 1000, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_class_instruction, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Per Pupil Classroom Instruction", y="Density") +
      ggtitle("Total District Per Pupil Classroom Instruction in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_class_instruction)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclid_score < 200) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_class_instruction)) %>%
  {
    ggplot(data=., aes(x=per_pupil_class_instruction, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Per Pupil Classroom Instruction", y="") +
      ggtitle("Total District Per Pupil Classroom Instruction in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_class_instruction)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_class_instruction, x=per_pupil_class_instruction), size=1, hjust=-.1) +
      theme( axis.text.y = element_text(size=4))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(hc_complete_cluster) %>%
  {
    ggplot(data=., aes(x=per_pupil_class_instruction)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 1000, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_class_instruction, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Per Pupil Classroom Instruction", y="Density") +
      ggtitle("Total District Per Pupil Classroom Instruction in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_class_instruction)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(hc_complete_cluster) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_class_instruction)) %>%
  {
    ggplot(data=., aes(x=per_pupil_class_instruction, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Per Pupil Classroom Instruction", y="") +
      ggtitle("Total District Per Pupil Classroom Instruction in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_class_instruction)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_class_instruction, x=per_pupil_class_instruction), size=3, hjust=-.1) +
      theme( axis.text.y = element_text(size=8))
  }

"""### Admin Cost"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  {
    ggplot(data=., aes(x=per_pupil_admin_cost)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 100, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_admin_cost, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Per Pupil Admin Cost", y="Density") +
      ggtitle("Total District Admin Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_admin_cost)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_admin_cost)) %>%
  {
    ggplot(data=., aes(x=per_pupil_admin_cost, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Per Pupil Admin Cost", y="") +
      ggtitle("Total District Admin Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_admin_cost)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_admin_cost, x=per_pupil_admin_cost), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclid_score < 200) %>%
  {
    ggplot(data=., aes(x=per_pupil_admin_cost)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 100, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_admin_cost, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Per Pupil Admin Cost", y="Density") +
      ggtitle("Total District Admin Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_admin_cost)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclid_score < 200) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_admin_cost)) %>%
  {
    ggplot(data=., aes(x=per_pupil_admin_cost, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Per Pupil Admin Cost", y="") +
      ggtitle("Total District Admin Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_admin_cost)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_admin_cost, x=per_pupil_admin_cost), size=1, hjust=-.1) +
      theme( axis.text.y = element_text(size=4))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(hc_complete_cluster) %>%
  {
    ggplot(data=., aes(x=per_pupil_admin_cost)) +
      geom_histogram(aes(y = after_stat(density)), binwidth = 100, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = per_pupil_admin_cost, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Total Per Pupil Admin Cost", y="Density") +
      ggtitle("Total District Admin Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_admin_cost)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(hc_complete_cluster) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, per_pupil_admin_cost)) %>%
  {
    ggplot(data=., aes(x=per_pupil_admin_cost, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Total Per Pupil Admin Cost", y="") +
      ggtitle("Total District Admin Cost in Peer Group", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$per_pupil_admin_cost)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=per_pupil_admin_cost, x=per_pupil_admin_cost), size=3, hjust=-.1) +
      theme( axis.text.y = element_text(size=8))
  }

"""### Instructional Per Total"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(inst_pct = per_pupil_class_instruction/ per_pupil_cost) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, inst_pct)) %>%
  {
    ggplot(data=., aes(x=inst_pct, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Instruction Percentage of Total Cost", y="") +
      ggtitle("Instruction Percentage of Total Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$inst_pct)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=scales::percent(inst_pct, accuracy = 1), x=inst_pct), size=3, hjust=-.1) +
      scale_x_continuous(labels = scales::label_percent(accuracy = 1))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(hc_complete_cluster) %>%
  dplyr::mutate(inst_pct = per_pupil_class_instruction/ per_pupil_cost) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, inst_pct)) %>%
  {
    ggplot(data=., aes(x=inst_pct, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Instruction Percentage of Total Cost", y="") +
      ggtitle("Instruction Percentage of Total Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$inst_pct)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=scales::percent(inst_pct, accuracy = 1), x=inst_pct), size=3, hjust=-.1) +
      scale_x_continuous(labels = scales::label_percent(accuracy = 1))
  }



"""## Teacher chars

### Ratios
"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_teacher_ratio = as.numeric(student_teacher_ratio)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, student_teacher_ratio)) %>%
  {
    ggplot(data=., aes(x=student_teacher_ratio, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Student-Teacher Ratio", y="") +
      ggtitle("Student-Teacher Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$student_teacher_ratio)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=student_teacher_ratio, x=student_teacher_ratio), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_admin_ratio = as.numeric(student_admin_ratio)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, student_admin_ratio)) %>%
  {
    ggplot(data=., aes(x=student_admin_ratio, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Student-Admin Ratio", y="") +
      ggtitle("Student-Admin Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$student_admin_ratio)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=student_admin_ratio, x=student_admin_ratio), size=3, hjust=-.1)
  }

"""### Teacher Experience"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExp_District = as.numeric(TeacherAvgYearsExp_District)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, TeacherAvgYearsExp_District)) %>%
  {
    ggplot(data=., aes(x=TeacherAvgYearsExp_District, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="TeacherAvgYearsExp", y="") +
      ggtitle("Teacher Average Years Experience", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$TeacherAvgYearsExp_District)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=TeacherAvgYearsExp_District, x=TeacherAvgYearsExp_District), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExpInDistrict_District = as.numeric(TeacherAvgYearsExpInDistrict_District)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, TeacherAvgYearsExpInDistrict_District)) %>%
  {
    ggplot(data=., aes(x=TeacherAvgYearsExpInDistrict_District, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="TeacherAvgYearsExpInDistrict", y="") +
      ggtitle("Teacher Average Years Experience in District", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$TeacherAvgYearsExpInDistrict_District)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=TeacherAvgYearsExpInDistrict_District, x=TeacherAvgYearsExpInDistrict_District), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageOfOutOfFieldTeachers_District = as.numeric(PercentageOfOutOfFieldTeachers_District)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, PercentageOfOutOfFieldTeachers_District)) %>%
  {
    ggplot(data=., aes(x=PercentageOfOutOfFieldTeachers_District, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="PercentageOfOutOfFieldTeachers_District", y="") +
      ggtitle("Percentage Out of Field Teachers", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$PercentageOfOutOfFieldTeachers_District)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=PercentageOfOutOfFieldTeachers_District, x=PercentageOfOutOfFieldTeachers_District), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageTeachersWithProvisionalCredentials_District = as.numeric(PercentageTeachersWithProvisionalCredentials_District)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, PercentageTeachersWithProvisionalCredentials_District)) %>%
  {
    ggplot(data=., aes(x=PercentageTeachersWithProvisionalCredentials_District, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="PercentageTeachersWithProvisionalCredentials_District", y="") +
      ggtitle("Percentage of Teachers with Provisional Credential", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$PercentageTeachersWithProvisionalCredentials_District)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=PercentageTeachersWithProvisionalCredentials_District, x=PercentageTeachersWithProvisionalCredentials_District), size=3, hjust=-.1)
  }

"""## Climate"""

# Abs_0	Abs_1-5
# Abs_6-10
# Abs_11-15
# Abs_over15

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Chronic_Abs_Pct = as.numeric(Chronic_Abs_Pct)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, Chronic_Abs_Pct)) %>%
  {
    ggplot(data=., aes(x=Chronic_Abs_Pct, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Chronic_Abs_Pct", y="") +
      ggtitle("Percentage of Chronically Absent Students", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$Chronic_Abs_Pct)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=Chronic_Abs_Pct, x=Chronic_Abs_Pct), size=3, hjust=-.1)
  }
# Chronic absenteeism is defined as being absent for 10% or more of the days enrolled during the school year

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Abs_over15 = as.numeric(Abs_over15)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, Abs_over15)) %>%
  {
    ggplot(data=., aes(x=Abs_over15, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Abs_over15", y="") +
      ggtitle("Percentage of Students Absent > 15 days", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$Abs_over15)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=Abs_over15, x=Abs_over15), size=3, hjust=-.1)
  }



"""## Outcomes"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(`Students with Disabilities`=as.numeric(`Students with Disabilities`), district_name = fct_reorder(district_name, `Students with Disabilities`)) %>%
  {
    ggplot(data=., aes(x=`Students with Disabilities`, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Pct", y="") +
      ggtitle("Percent Students with Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$`Students with Disabilities`)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=`Students with Disabilities`, x=`Students with Disabilities`), size=3, hjust=-.1)
  }

"""### Math"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  {
    ggplot(data=., aes(x=MATH_ME_District)) +
      geom_histogram(aes(y = after_stat(density)), binwidth=2, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = MATH_ME_District, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="Math Meets/Exceeds Pct", y="Density") +
      ggtitle("Meets/Exceeds Math", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, MATH_ME_District)) %>%
  {
    ggplot(data=., aes(x=MATH_ME_District, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Math Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds Math", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=MATH_ME_District, x=MATH_ME_District), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, MATH_pct_level5)) %>%
  {
    ggplot(data=., aes(x=MATH_pct_level5, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Math Exceeds Pct", y="") +
      ggtitle("Exceeds Math", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_pct_level5)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=scales::percent(MATH_pct_level5, accuracy = 1), x=MATH_pct_level5), size=3, hjust=-.1) +
      scale_x_continuous(labels = scales::label_percent(accuracy = 1))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, mSGP_Math)) %>%
  {
    ggplot(data=., aes(x=mSGP_Math, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Math Median Growth", y="") +
      ggtitle("Math Median Growth", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=mSGP_Math, x=mSGP_Math), size=3, hjust=-.1)
  }

"""#### By Disability"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, MATH_ME_District_notdis)) %>%
  {
    ggplot(data=., aes(x=MATH_ME_District_notdis, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Math Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds Math - Students without Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District_notdis)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=MATH_ME_District_notdis, x=MATH_ME_District_notdis), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000, !is.na(MATH_ME_District_dis)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, MATH_ME_District_dis)) %>%
  {
    ggplot(data=., aes(x=MATH_ME_District_dis, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="Math Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds Math - Students with Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District_dis)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=MATH_ME_District_dis, x=MATH_ME_District_dis), size=3, hjust=-.1)
  }



"""### ELA"""



options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  {
    ggplot(data=., aes(x=ELA_ME_District)) +
      geom_histogram(aes(y = after_stat(density)), binwidth=2, fill = "grey", color = "white") +
      geom_density(alpha = 0.3) +
      geom_vline(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(xintercept = ELA_ME_District, color=dist_colors), linetype = "dashed", linewidth=2) +
      theme_minimal() +
      labs(x="ELA Meets/Exceeds Pct", y="Density") +
      ggtitle("Meets/Exceeds ELA", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_color_manual(values=district_name_colors, guide="none") +
      geom_text_repel(data = comb[comb$district_name %in% names(district_name_colors)[1:4], ], aes(label=district_name, y=0))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, ELA_ME_District)) %>%
  {
    ggplot(data=., aes(x=ELA_ME_District, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="ELA Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds ELA", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=ELA_ME_District, x=ELA_ME_District), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, ELA_ME_District_notdis)) %>%
  {
    ggplot(data=., aes(x=ELA_ME_District_notdis, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="ELA Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds ELA - Students Without Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District_notdis)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=ELA_ME_District_notdis, x=ELA_ME_District_notdis), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000, !is.na(ELA_ME_District_dis)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, ELA_ME_District_dis)) %>%
  {
    ggplot(data=., aes(x=ELA_ME_District_dis, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="ELA Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds ELA - Students with Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District_dis)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=ELA_ME_District_dis, x=ELA_ME_District_dis), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000, !is.na(ELA_pct_level5)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, ELA_pct_level5)) %>%
  {
    ggplot(data=., aes(x=ELA_pct_level5, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="ELA Exceeds Pct", y="") +
      ggtitle("Exceeds ELA", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_pct_level5)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=scales::percent(ELA_pct_level5, accuracy = 1), x=ELA_pct_level5), size=3, hjust=-.1) +
      scale_x_continuous(labels = scales::label_percent(accuracy = 1))
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, mSGP_ELA)) %>%
  {
    ggplot(data=., aes(x=mSGP_ELA, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="ELA Median Growth", y="") +
      ggtitle("ELA Median Student Growth", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=mSGP_ELA, x=mSGP_ELA), size=3, hjust=-.1)
  }



"""#### By Disability"""

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, ELA_ME_District_notdis)) %>%
  {
    ggplot(data=., aes(x=ELA_ME_District_notdis, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="ELA Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds ELA - Students without Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District_notdis)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=ELA_ME_District_notdis, x=ELA_ME_District_notdis), size=3, hjust=-.1)
  }

options(repr.plot.width=10, repr.plot.height=8)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000, !is.na(ELA_ME_District_dis)) %>%
  dplyr::mutate(district_name = fct_reorder(district_name, ELA_ME_District_dis)) %>%
  {
    ggplot(data=., aes(x=ELA_ME_District_dis, y=district_name, fill=dist_colors)) +
      geom_bar(stat="identity", position="dodge") +
      theme_minimal() +
      labs(x="ELA Meets/Exceeds Pct", y="") +
      ggtitle("Meets/Exceeds ELA - Students with Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District_dis)))) +
      scale_fill_manual(values=district_name_colors, guide="none") +
      geom_text(aes(label=ELA_ME_District_dis, x=ELA_ME_District_dis), size=3, hjust=-.1)
  }



"""## Outcomes vs.

### Math
"""

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M", aes(weight=TotalEnrollment)) +
      stat_poly_eq(use_label(c("eq")), method="rlm:M",  label.x = .8, label.y=1, color="black") +
      #stat_smooth(method=function(formula, data, weights=weight) rlm(formula, data, weights=weight, method="MM"), fullrange=TRUE) +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  #dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M", aes(weight=TotalEnrollment)) +
      stat_poly_eq(use_label(c("eq")), method="rlm:M",  label.x = .8, label.y=1, color="black") +
      #stat_smooth(method=function(formula, data, weights=weight) rlm(formula, data, weights=weight, method="MM"), fullrange=TRUE) +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  #dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Median_family_income__dollars_, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M", aes(weight=TotalEnrollment)) +
      stat_poly_eq(use_label(c("eq")), method="rlm:M",  label.x = .8, label.y=1, color="black") +
      #stat_smooth(method=function(formula, data, weights=weight) rlm(formula, data, weights=weight, method="MM"), fullrange=TRUE) +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Median Family Income", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Median Family Income", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=MATH_pct_level5, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M",  label.x = .8, label.y=1, color="black") +  #stat_smooth(method=function(formula, data, weights=weight) rlm(formula, data, weights=weight, method="MM"), fullrange=TRUE) +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="Math Exceeds") +
      ggtitle("Math Exceeds by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_pct_level5)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="Math Growth") +
      ggtitle("Math Growth by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  #dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="Math Growth") +
      ggtitle("Math Growth by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(inst_pct = per_pupil_class_instruction/ per_pupil_cost) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=inst_pct, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percent Instruction", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Percent Instruction", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none") +
      scale_x_continuous(labels = scales::label_percent(accuracy = 1))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_teacher_ratio=as.numeric(student_teacher_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_teacher_ratio, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Teacher Ratio", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Student Teacher Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_teacher_ratio=as.numeric(student_teacher_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_teacher_ratio, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Teacher Ratio", y="Math Growth") +
      ggtitle("Math Growth by Student Teacher Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_admin_ratio=as.numeric(student_admin_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_admin_ratio, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Admin Ratio", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Student Admin Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_admin_ratio=as.numeric(student_admin_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_admin_ratio, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=student_admin_ratio)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Admin Ratio", y="Math Growth") +
      ggtitle("Math Growth by Student Admin Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExp_District=as.numeric(TeacherAvgYearsExp_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExp_District, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Teacher Avg Years Exp", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExp_District=as.numeric(TeacherAvgYearsExp_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExp_District, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp", y="Math Meets/Exceeds") +
      ggtitle("Math Growth by Teacher Avg Years Exp", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExpInDistrict_District=as.numeric(TeacherAvgYearsExpInDistrict_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExpInDistrict_District, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp in District", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Teacher Avg Years Ex in District", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExpInDistrict_District=as.numeric(TeacherAvgYearsExpInDistrict_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExpInDistrict_District, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp in District", y="Math Meets/Exceeds") +
      ggtitle("Math Growth by Teacher Avg Years Exp in District", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageOfOutOfFieldTeachers_District=as.numeric(PercentageOfOutOfFieldTeachers_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageOfOutOfFieldTeachers_District, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Of Out Of Field Teachers", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Percentage Of Out Of Field Teachers", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageOfOutOfFieldTeachers_District=as.numeric(PercentageOfOutOfFieldTeachers_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageOfOutOfFieldTeachers_District, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Of Out Of Field Teachers", y="Math Meets/Exceeds") +
      ggtitle("Math Growth by Percentage Of Out Of Field Teachers", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageTeachersWithProvisionalCredentials_District=as.numeric(PercentageTeachersWithProvisionalCredentials_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageTeachersWithProvisionalCredentials_District, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Teachers With Provisional Credentials", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Percentage Teachers With Provisional Credentials", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageTeachersWithProvisionalCredentials_District=as.numeric(PercentageTeachersWithProvisionalCredentials_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageTeachersWithProvisionalCredentials_District, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Teachers With Provisional Credentials", y="Math Meets/Exceeds") +
      ggtitle("Math Growth by Percentage Teachers With Provisional Credentials", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Chronic_Abs_Pct=as.numeric(Chronic_Abs_Pct)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Chronic_Abs_Pct, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Chronic Absent Pct", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Chronic Absent Pct", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  #dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Chronic_Abs_Pct=as.numeric(Chronic_Abs_Pct)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Chronic_Abs_Pct, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Chronic Absent Pct", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Chronic Absent Pct", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Chronic_Abs_Pct=as.numeric(Chronic_Abs_Pct)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Chronic_Abs_Pct, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Chronic Absent Pct", y="Math Meets/Exceeds") +
      ggtitle("Math Growth by Chronic Absent Pct", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Abs_over15=as.numeric(Abs_over15)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Abs_over15, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Pct 15+ Absent", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Pct 15+ Absent", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Abs_over15=as.numeric(Abs_over15)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Abs_over15, y=mSGP_Math, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Pct 15+ Absent", y="Math Meets/Exceeds") +
      ggtitle("Math Growth by Chronic Absent Pct", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_Math)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(`Students with Disabilities`=as.numeric(`Students with Disabilities`)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=`Students with Disabilities`, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Pct Students w/Disabilities", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by Pct Students w/Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TotalEnrollment, y=MATH_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="TotalEnrollment", y="Math Meets/Exceeds") +
      ggtitle("Math Meets/Exceeds by TotalEnrollment", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$MATH_ME_District)))) +
      scale_size_continuous(guide="none")
  }

##### Models #####

mcomb <-comb %>%
  dplyr::mutate(inst_pct = 100*per_pupil_class_instruction/ per_pupil_cost) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  dplyr::mutate(per_pupil_cost=as.numeric(per_pupil_cost)/1000) %>%
  dplyr::mutate(student_teacher_ratio=as.numeric(student_teacher_ratio)) %>%
  dplyr::mutate(student_admin_ratio=as.numeric(student_admin_ratio)) %>%
  dplyr::mutate(TeacherAvgYearsExp_District=as.numeric(TeacherAvgYearsExp_District)) %>%
  dplyr::mutate(TeacherAvgYearsExpInDistrict_District=as.numeric(TeacherAvgYearsExpInDistrict_District)) %>%
  dplyr::mutate(PercentageOfOutOfFieldTeachers_District=as.numeric(PercentageOfOutOfFieldTeachers_District)) %>%
  dplyr::mutate(PercentageTeachersWithProvisionalCredentials_District=as.numeric(PercentageTeachersWithProvisionalCredentials_District)) %>%
  dplyr::mutate(Chronic_Abs_Pct=as.numeric(Chronic_Abs_Pct)) %>%
  dplyr::mutate(Abs_over15=as.numeric(Abs_over15)) %>%
  dplyr::mutate(StudentsWithDisabilities=as.numeric(`Students with Disabilities`)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment))

predictors <- c("per_pupil_cost", "inst_pct", "TotalEnrollment",
                "student_teacher_ratio", "student_admin_ratio", "TeacherAvgYearsExp_District",
                "TeacherAvgYearsExpInDistrict_District", "PercentageOfOutOfFieldTeachers_District",
                "PercentageTeachersWithProvisionalCredentials_District", "Chronic_Abs_Pct",
                "Abs_over15", "StudentsWithDisabilities")

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("MATH_ME_District ~", predictor))
  model <- rlm(model_formula, data = mcomb, subset = euclidLT100SizeLT2000)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("MATH_ME_District_notdis ~", predictor))
  model <- rlm(model_formula, data = mcomb, subset = euclidLT100SizeLT2000)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("mSGP_Math ~", predictor))
  model <- rlm(model_formula, data = mcomb, subset = euclidLT100SizeLT2000)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

rlm(MATH_ME_District~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District,
    data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()

rlm(MATH_ME_District_notdis~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District,
    data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()

rlm(MATH_ME_District~per_pupil_cost, data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()
rlm(MATH_ME_District~per_pupil_cost+StudentsWithDisabilities, data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()

predictors <- c("per_pupil_cost", "inst_pct", "TotalEnrollment",
                "student_teacher_ratio", "student_admin_ratio", "TeacherAvgYearsExp_District",
                "TeacherAvgYearsExpInDistrict_District", "PercentageOfOutOfFieldTeachers_District",
                "PercentageTeachersWithProvisionalCredentials_District", "Chronic_Abs_Pct",
                "Abs_over15", "StudentsWithDisabilities")

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("MATH_ME_District ~", predictor))
  model <- rlm(model_formula, data = mcomb)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

predictors <- c("per_pupil_cost", "inst_pct", "TotalEnrollment",
                "student_teacher_ratio", "student_admin_ratio", "TeacherAvgYearsExp_District",
                "TeacherAvgYearsExpInDistrict_District", "PercentageOfOutOfFieldTeachers_District",
                "PercentageTeachersWithProvisionalCredentials_District", "Chronic_Abs_Pct",
                "Abs_over15", "StudentsWithDisabilities")

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("mSGP_Math ~", predictor))
  model <- rlm(model_formula, data = mcomb)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

rlm(MATH_ME_District~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District,
    data=mcomb) %>% summary()

rlm(MATH_ME_District_notdis~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District,
    data=mcomb) %>% summary()

rlm(MATH_ME_District~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District+
      Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Mean_household_income__dollars_,
    data=mcomb) %>% summary()

"""### ELA"""

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M", aes(weight=TotalEnrollment)) +
      stat_poly_eq(use_label(c("eq")), method="rlm:M",  label.x = .8, label.y=1, color="black") +
      #stat_smooth(method=function(formula, data, weights=weight) rlm(formula, data, weights=weight, method="MM"), fullrange=TRUE) +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=ELA_pct_level5, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M",  label.x = .8, label.y=1, color="black") +  #stat_smooth(method=function(formula, data, weights=weight) rlm(formula, data, weights=weight, method="MM"), fullrange=TRUE) +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="ELA Exceeds") +
      ggtitle("ELA Exceeds by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_pct_level5)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="ELA Growth") +
      ggtitle("ELA Growth by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(inst_pct = per_pupil_class_instruction/ per_pupil_cost) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=inst_pct, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percent Instruction", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Percent Instruction", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none") +
      scale_x_continuous(labels = scales::label_percent(accuracy = 1))
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_teacher_ratio=as.numeric(student_teacher_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_teacher_ratio, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Teacher Ratio", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Student Teacher Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_teacher_ratio=as.numeric(student_teacher_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_teacher_ratio, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Teacher Ratio", y="ELA Growth") +
      ggtitle("ELA Growth by Student Teacher Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_admin_ratio=as.numeric(student_admin_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_admin_ratio, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Admin Ratio", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Student Admin Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(student_admin_ratio=as.numeric(student_admin_ratio)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=student_admin_ratio, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=student_admin_ratio)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Student Admin Ratio", y="ELA Growth") +
      ggtitle("ELA Growth by Student Admin Ratio", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExp_District=as.numeric(TeacherAvgYearsExp_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExp_District, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Teacher Avg Years Exp", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExp_District=as.numeric(TeacherAvgYearsExp_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExp_District, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp", y="ELA Meets/Exceeds") +
      ggtitle("ELA Growth by Teacher Avg Years Exp", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExpInDistrict_District=as.numeric(TeacherAvgYearsExpInDistrict_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExpInDistrict_District, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp in District", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Teacher Avg Years Ex in District", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TeacherAvgYearsExpInDistrict_District=as.numeric(TeacherAvgYearsExpInDistrict_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TeacherAvgYearsExpInDistrict_District, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Teacher Avg Years Exp in District", y="ELA Meets/Exceeds") +
      ggtitle("ELA Growth by Teacher Avg Years Exp in District", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageOfOutOfFieldTeachers_District=as.numeric(PercentageOfOutOfFieldTeachers_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageOfOutOfFieldTeachers_District, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Of Out Of Field Teachers", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Percentage Of Out Of Field Teachers", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageOfOutOfFieldTeachers_District=as.numeric(PercentageOfOutOfFieldTeachers_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageOfOutOfFieldTeachers_District, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Of Out Of Field Teachers", y="ELA Meets/Exceeds") +
      ggtitle("ELA Growth by Percentage Of Out Of Field Teachers", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageTeachersWithProvisionalCredentials_District=as.numeric(PercentageTeachersWithProvisionalCredentials_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageTeachersWithProvisionalCredentials_District, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Teachers With Provisional Credentials", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Percentage Teachers With Provisional Credentials", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(PercentageTeachersWithProvisionalCredentials_District=as.numeric(PercentageTeachersWithProvisionalCredentials_District)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=PercentageTeachersWithProvisionalCredentials_District, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Percentage Teachers With Provisional Credentials", y="ELA Meets/Exceeds") +
      ggtitle("ELA Growth by Percentage Teachers With Provisional Credentials", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Chronic_Abs_Pct=as.numeric(Chronic_Abs_Pct)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Chronic_Abs_Pct, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Chronic Absent Pct", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Chronic Absent Pct", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Chronic_Abs_Pct=as.numeric(Chronic_Abs_Pct)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Chronic_Abs_Pct, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Chronic Absent Pct", y="ELA Meets/Exceeds") +
      ggtitle("ELA Growth by Chronic Absent Pct", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }



options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Abs_over15=as.numeric(Abs_over15)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Abs_over15, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Pct 15+ Absent", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Pct 15+ Absent", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(Abs_over15=as.numeric(Abs_over15)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=Abs_over15, y=mSGP_ELA, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Pct 15+ Absent", y="ELA Meets/Exceeds") +
      ggtitle("ELA Growth by Chronic Absent Pct", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$mSGP_ELA)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(`Students with Disabilities`=as.numeric(`Students with Disabilities`)) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=`Students with Disabilities`, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Pct Students w/Disabilities", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Pct Students w/Disabilities", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=TotalEnrollment, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M") +
      stat_poly_eq(use_label(c("eq")), method="rlm:M", label.x = .8, label.y=1, color="black") +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="TotalEnrollment", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by TotalEnrollment", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }

##### Models #####

predictors <- c("per_pupil_cost", "inst_pct", "TotalEnrollment",
                "student_teacher_ratio", "student_admin_ratio", "TeacherAvgYearsExp_District",
                "TeacherAvgYearsExpInDistrict_District", "PercentageOfOutOfFieldTeachers_District",
                "PercentageTeachersWithProvisionalCredentials_District", "Chronic_Abs_Pct",
                "Abs_over15", "StudentsWithDisabilities")

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("ELA_ME_District ~", predictor))
  model <- rlm(model_formula, data = mcomb, subset = euclidLT100SizeLT2000)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("ELA_ME_District_notdis ~", predictor))
  model <- rlm(model_formula, data = mcomb, subset = euclidLT100SizeLT2000)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("mSGP_ELA ~", predictor))
  model <- rlm(model_formula, data = mcomb, subset = euclidLT100SizeLT2000)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

rlm(ELA_ME_District~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District,
    data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()

rlm(ELA_ME_District_notdis~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District,
    data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()

rlm(ELA_ME_District~per_pupil_cost, data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()
rlm(ELA_ME_District~per_pupil_cost+StudentsWithDisabilities, data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()

rlm(per_pupil_cost~StudentsWithDisabilities, data=mcomb, subset=euclidLT100SizeLT2000) %>% summary()

predictors <- c("per_pupil_cost", "inst_pct", "TotalEnrollment",
                "student_teacher_ratio", "student_admin_ratio", "TeacherAvgYearsExp_District",
                "TeacherAvgYearsExpInDistrict_District", "PercentageOfOutOfFieldTeachers_District",
                "PercentageTeachersWithProvisionalCredentials_District", "Chronic_Abs_Pct",
                "Abs_over15", "StudentsWithDisabilities")

results_df <- data.frame(
  Predictor = predictors,
  Coefficient = NA,
  Tvalue = NA
)

for (i in seq_along(predictors)) {
  predictor <- predictors[i]
  model_formula <- as.formula(paste("ELA_ME_District ~", predictor))
  model <- rlm(model_formula, data = mcomb)
  coef <- coef(model)
  se <- sqrt(diag(vcov(model)))
  t_value <- coef[2] / se[2]  # Calculate t-value
  results_df[i, c("Coefficient", "Tvalue")] <- c(coef[2], t_value)  # Store t-value
}

results_df

rlm(ELA_ME_District~per_pupil_cost+inst_pct+student_teacher_ratio+Chronic_Abs_Pct+TeacherAvgYearsExp_District+student_admin_ratio+
      PercentageTeachersWithProvisionalCredentials_District+StudentsWithDisabilities+TotalEnrollment+PercentageOfOutOfFieldTeachers_District,
    data=mcomb) %>% summary()

#### Descriptives ####

select_vars <- quos(mSGP_Math, MATH_ME_District, MATH_ME_District_notdis, MATH_ME_District_dis,
                    mSGP_ELA, ELA_ME_District, ELA_ME_District_notdis, ELA_ME_District_dis,
                    per_pupil_cost, inst_pct, student_teacher_ratio, student_admin_ratio,
                    TeacherAvgYearsExp_District,
                    PercentageTeachersWithProvisionalCredentials_District,
                    PercentageOfOutOfFieldTeachers_District, Chronic_Abs_Pct,
                    StudentsWithDisabilities, TotalEnrollment)

bind_cols(mcomb %>%
            dplyr::filter(euclidLT100SizeLT2000) %>%
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x, na.rm = T), 1)) %>% t() %>% data.frame() %>% tibble::rownames_to_column(),
          
          mcomb %>%
            dplyr::filter(ST_LEAID == fh_staid) %>%
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t(),
          
          mcomb %>%
            dplyr::filter(ST_LEAID == "NJ-254570") %>% #rumson
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t(),
          
          mcomb %>%
            dplyr::filter(ST_LEAID == "NJ-252720") %>% #little
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t(),
          
          mcomb %>%
            dplyr::filter(ST_LEAID == "NJ-254770") %>% #shrews
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t()
) %>%
  set_colnames(c("Var", "All", "Fair Haven", "Rumson", "Little Silver", "Shrewsbury")) %>%
  
  sheet_write(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="Descriptives_Ac")

select_vars <- quos(Percent__Estimate__EDUCATIONAL_ATTAINMENT__Population_25_years_and_over__Bachelor_s_degree,
                    Percent__Estimate__EDUCATIONAL_ATTAINMENT__Population_25_years_and_over__Graduate_or_professional_degree,
                    Percent__Estimate__EMPLOYMENT_STATUS__Females_16_years_and_over__In_labor_force,
                    Percent__Estimate__EMPLOYMENT_STATUS__Civilian_labor_force__Unemployment_Rate,Number__Estimate__HOUSEHOLDS_BY_TYPE__Total_households__Average_household_size,
                    Number__Estimate__HOUSEHOLDS_BY_TYPE__Total_households__Average_family_size,
                    Number__Estimate__HOUSEHOLDS_BY_TYPE__Total_households__Average_household_size,
                    Percent__Estimate__OCCUPATION__Civilian_employed_population_16_years_and_over__Management__business__science__and_arts_occupations,
                    Percent__Estimate__OCCUPATION__Civilian_employed_population_16_years_and_over__Service_occupations,
                    Percent__Estimate__OCCUPATION__Civilian_employed_population_16_years_and_over__Sales_and_office_occupations,
                    Percent__Estimate__OCCUPATION__Civilian_employed_population_16_years_and_over__Natural_resources__construction__and_maintenance_occupations,
                    Percent__Estimate__OCCUPATION__Civilian_employed_population_16_years_and_over__Production__transportation__and_material_moving_occupations,
                    Percent__Estimate__SEX_AND_AGE__Total_population__Under_18_years,
                    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Total_households__Median_household_income__dollars_,
                    Number__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families__Mean_family_income__dollars_,
                    Percent__Estimate__INCOME_AND_BENEFITS__IN_2022_INFLATION_ADJUSTED_DOLLARS___Families___200_000_or_more)

bind_cols(mcomb %>%
            dplyr::filter(LEAID %in% mcomb$LEAID[mcomb$euclidLT100SizeLT2000]) %>%
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t() %>% data.frame() %>% tibble::rownames_to_column(),
          
          
          mcomb %>%
            dplyr::filter(LEAID %in% fh_leaid) %>%
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t(),
          
          mcomb %>%
            dplyr::filter(LEAID %in% "3414370") %>%
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t(),
          
          mcomb %>%
            dplyr::filter(LEAID %in% "3408790") %>%
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t(),
          
          mcomb %>%
            dplyr::filter(LEAID %in% "3414970") %>%
            dplyr::select(!!!select_vars) %>%
            dplyr::summarise_all(\(x) round(mean(x), 1)) %>% t()
) %>%
  set_colnames(c("Var", "All", "Fair Haven", "Rumson", "Little Silver", "Shrewsbury")) %>%
  
  sheet_write(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="Descriptives_SES")

#### LGCM for outcomes ####

outcomes_time <- rc_all_comb %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName.x=DistrictName, ELA_ME_District, MATH_ME_District, disab_pct=`Students with Disabilities`, TotalEnrollment)

str(outcomes_time)

outcomes_time <- outcomes_time %>%
  dplyr::mutate(
    year=case_when(
      SchoolYear == "2014-2015" ~ 1,
      SchoolYear == "2015-2016" ~ 2,
      SchoolYear == "2016-2017" ~ 3,
      SchoolYear == "2017-2018" ~ 4,
      SchoolYear == "2018-2019" ~ 5,
      SchoolYear == "2019-2020" ~ 6,
      SchoolYear == "2020-2021" ~ 7,
      SchoolYear == "2021-2022" ~ 8,
      SchoolYear == "2022-2023" ~ 9,
    ),
    ELA_ME_District = as.numeric(ELA_ME_District),
    MATH_ME_District = as.numeric(MATH_ME_District),
    disab_pct = as.numeric(disab_pct)/100,
    TotalEnrollment = as.numeric(TotalEnrollment)
  ) %>%
  dplyr::filter(ST_LEAID %in% comb$ST_LEAID[comb$euclidLT100SizeLT2000])

str(outcomes_time)

summary(outcomes_time)
#disab_pct is missing for 2014-15

#outcomes_time <- outcomes_time %>% dplyr::filter(!is.na(ELA_ME_District))
outcomes_time <- outcomes_time %>% dplyr::rename(stleaid=ST_LEAID)

outcomes_time$dist_colors <- comb$dist_colors[match(outcomes_time$stleaid, comb$ST_LEAID)]
outcomes_time$dist_size <- if_else(outcomes_time$dist_colors=="Other", .5, 2)

all_years <- paste(2014:2022, 2015:2023, sep = "-")
years_vector <- setNames(all_years, 1:9) # Corrected to align names and values

# Use dplyr::full_join with a dummy data frame to ensure all levels are present
data_full <- outcomes_time %>%
  full_join(data.frame(SchoolYear = factor(all_years, levels = all_years)), by = "SchoolYear") %>%
  dplyr::mutate(dist_colors = fct_relevel(dist_colors, rev(unique(outcomes_time$dist_colors)))) %>%
  dplyr::mutate(MATH_ME_District = MATH_ME_District/100, ELA_ME_District=ELA_ME_District/100)
data_full$DistrictName <- str_trim(str_replace_all(comb$LEA_NAME, "School District|Borough|Boro", "")[match(data_full$stleaid, comb$ST_LEAID)])

ggplot(aes(x=SchoolYear, y=ELA_ME_District, group=stleaid, color=dist_colors), data=data_full)  +
  geom_line(aes(size=dist_size)) +
  #geom_smooth(aes(group=NA, color=NA), method="loess") +
  scale_x_discrete(labels = all_years, expand = expansion(add=c(.5,1.5))) +
  theme_bw() +
  scale_color_manual("District", values=district_name_colors, labels =c("Shrewsbury", "Rumson", "Little Silver", "Fair Haven", "Others"), guide='none')  +
  labs(title = "ELA % Meets/Exceeds", subtitle = "Fair Haven and Peer Districts, 2014-15 to 2022-23", x="School Year", y="Percent Meets/Exceeds")  +
  scale_size(guide = 'none', range = c(0.5, 2)) +
  scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
  geom_text(data = data_full %>% filter(SchoolYear == "2022-2023", dist_colors != "Other"),
            aes(label = DistrictName, x = 9.5) , hjust = 0.4, fontface = "bold", color = "#888888", size = 3)

ggplot(aes(x=SchoolYear, y=MATH_ME_District, group=stleaid, color=dist_colors), data=data_full)  +
  geom_line(aes(size=dist_size)) +
  #geom_smooth(aes(group=NA, color=NA), method="loess") +
  scale_x_discrete(labels = all_years, expand = expansion(add=c(.5,1.5))) +
  theme_bw() +
  scale_color_manual("District", values=district_name_colors, labels =c("Shrewsbury", "Rumson", "Little Silver", "Fair Haven", "Others"), guide='none')  +
  labs(title = "Math % Meets/Exceeds", subtitle = "Fair Haven and Peer Districts, 2014-15 to 2022-23", x="School Year", y="Percent Meets/Exceeds")  +
  scale_size(guide = 'none', range = c(0.5, 2)) +
  scale_y_continuous(labels = scales::label_percent(accuracy = 1)) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
  geom_text(data = data_full %>% filter(SchoolYear == "2022-2023", dist_colors != "Other"),
            aes(label = DistrictName, x = 9.5) , hjust = 0.4, fontface = "bold", color = "#888888", size = 3)


##### brms #####

# data is in a data frame called 'outcomes_time'
# with variables: stleaid, year, ELA_ME_District, MATH_ME_District, disab_pct

# Formula for a basic LGCM with random intercepts and slopes
# and a covariate (disab_pct) predicting the intercept
formula <- bf(
  ELA_ME_District ~ 1 + intercept + slope * year,  # Fixed-effects formula
  intercept ~ 1 + (1 | stleaid),         # Random-effects formula for the intercept, maybe disab_pct + (1 | stleaid),
  slope ~ 1 + (1 | stleaid),             # Random-effects formula for the slope
  nl = TRUE # Specify that the model is non-linear
)

# Prior specification (using weakly informative priors)
priors <- c(
  prior(normal(50, 25), class = "b", nlpar = "intercept"),  #  prior for overall intercept
  prior(normal(0, 2.5), class = "b", nlpar = "slope"),   #  prior for overall slope
  prior(student_t(3, 0, 5), class = "sd", group = "stleaid", nlpar = "intercept"),
  prior(student_t(3, 0, 2.5), class = "sd", group = "stleaid", nlpar = "slope") #  prior for SD of random slopes
  #prior(lkj(2), class = "cor")
)

## Priori predictive checks
m_prior <- brm(formula = formula,
               data = data_full,
               prior = priors,
               sample_prior = "only", # sample from priors only
               chains = 4,
               iter = 2000,
               warmup = 1000)

# generate data from the priors
yrep1 <- posterior_predict(m_prior, ndraws = 500)

# plot a random subset of the prior simulated data
# the idea here is you want to see if these priors generate
# data that look like they could have come from your actual data
# or if they look wildly off
ppc_dens_overlay(y = data_full$ELA_ME_District[1:(length(data_full$ELA_ME_District)-2)],
                 yrep = yrep1[sample(nrow(yrep1), 25), ])

# you can also check specific parameters with pp_check
pp_check(m_prior, type = "stat", stat = "mean", ndraws = 500)
pp_check(m_prior, type = "stat", stat = "sd", ndraws = 500)

# Fit the model
model1 <- brm(
  formula = formula,
  data = outcomes_time,
  prior = priors,
  family = gaussian(), # Assuming test scores are normally distributed
  chains = 4, # Number of MCMC chains
  iter = 4000, # Number of iterations per chain
  warmup = 1000, # Number of warmup iterations
  cores = 4 # Number of cores to use for parallel processing (optional)
)

ls()

# Summarize the model
summary(model1)

# Further diagnostics (trace plots, Rhat, etc.)
plot(model1)

# Assuming your model is called 'model' and your original data frame is 'df'
# Let's say you want predictions for districtID "A" from 2014 to 2023

new_data <- data.frame(
  stleaid = rep(fh_staid, 9), # Replace "A" with your desired stleaid
  year = c(1, 2, 3, 4, 5, 6, 7, 8, 9)  # Replace with your coded year values
  #special_ed_percent = mean(df$special_ed_percent) # Hold covariate at mean, or you can vary it
)

# Get the fitted values (posterior distribution of predictions)
fitted_values <- fitted(model1, newdata = new_data, re_formula = NULL, allow_new_levels = TRUE)

# Add these to new_data
new_data$Estimate <- fitted_values[, "Estimate"]
new_data$Est.Error <- fitted_values[, "Est.Error"]
new_data$Q2.5 <- fitted_values[, "Q2.5"] # Lower bound of 95% credible interval
new_data$Q97.5 <- fitted_values[, "Q97.5"] # Upper bound of 95% credible interval

# Since the model is non-linear, these fitted values are the linear predictor
# To get them on the scale of the outcome variable (test_score) we must apply
# the inverse-link function. Since this is a gaussian model, the link function is
# the identity function. Thus, we do not have to transform these.

ggplot(new_data, aes(x = year, y = Estimate)) +
  geom_line() +
  geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5), alpha = 0.3) + # Credible interval
  labs(title = "Predicted Growth Curve for FH",
       x = "Year",
       y = "Predicted Test Score") +
  theme_minimal()


# # Get posterior predictions for each individual and group
preds <- model1 %>%
 add_epred_draws(newdata = expand_grid(stleaid = unique(outcomes_time$stleaid),
                                   year = unique(outcomes_time$year)), ndraws = 100, re_formula=NULL)

preds$dist_colors <- comb$dist_colors[match(preds$stleaid, comb$ST_LEAID)]

ggplot(preds %>% dplyr::filter(stleaid %in% c(fh_staid, rums_staid, ls_staid, shrews_staid)), aes(x = year, y = .epred, group = stleaid)) +
  geom_line(alpha = 0.25, aes(group = interaction(stleaid, .draw), color=dist_colors)) + # Each line is a different stleaid and posterior draw
  facet_wrap(~stleaid) + # Separate panels for each stleaid
  labs(title = "Individual Growth Curves by stleaid",
       x = "Year",
       y = "Predicted ELA Score") +
  theme_bw()  +
  scale_color_manual(values=district_name_colors, guide="none") 


summary_curves <- preds %>%
  group_by(stleaid, year) %>%
  summarize(
    median_ela = median(.epred),
    mean_ela = mean(.epred),
    .lower = quantile(.epred, 0.025), # Lower bound of 95% CI
    .upper = quantile(.epred, 0.975)  # Upper bound of 95% CI
  )

summary_curves$dist_colors <- comb$dist_colors[match(summary_curves$stleaid, comb$ST_LEAID)]

ggplot(summary_curves %>% dplyr::filter(stleaid %in% c(fh_staid, rums_staid, ls_staid, shrews_staid)), aes(x = year, y = median_ela, group = stleaid, color=dist_colors)) +
  geom_ribbon(aes(ymin = .lower, ymax = .upper, fill = dist_colors), alpha = 0.3) +  # Credible interval
  geom_line(aes(color = dist_colors), linewidth = 1) +  # Median line
  facet_wrap(~stleaid) +
  labs(
    title = "Median Growth Curves with 95% Credible Intervals",
    x = "Year",
    y = "Predicted ELA Score"
  ) +
  theme_bw() +
  guides(fill = "none", color = "none") +
  scale_color_manual(values=district_name_colors, guide="none") +
  scale_fill_manual(values=district_name_colors, guide="none") 

ggplot(summary_curves %>% dplyr::filter(stleaid %in% c(fh_staid, rums_staid, ls_staid, shrews_staid)), aes(x = year, y = mean_ela, group = stleaid, color=dist_colors)) +
  geom_ribbon(aes(ymin = .lower, ymax = .upper, fill = dist_colors), alpha = 0.3) +  # Credible interval
  geom_line(aes(color = dist_colors), linewidth = 1) +  # Median line
  facet_wrap(~stleaid) +
  labs(
    title = "Mean Growth Curves with 95% Credible Intervals",
    x = "Year",
    y = "Predicted ELA Score"
  ) +
  theme_bw() +
  guides(fill = "none", color = "none") +
  scale_color_manual(values=district_name_colors, guide="none") +
  scale_fill_manual(values=district_name_colors, guide="none") 

#### Enrollments ####

## Data

enr_all <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="enr_all")

url <- "https://www.nj.gov/education/doedata/enr/enr24/enrollment_2324.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 3
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=2))
print(paste0(sheet_names[nsheet], "_D"))

District_D23 <- get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `County Code`, `District Code`), SchoolYear="2023-2024") %>%
  dplyr::select(-`County Code`, -`County Name`, -`District Code`)

url <- "https://www.nj.gov/education/doedata/enr/enr23/enrollment_2223.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 3
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=2))
print(paste0(sheet_names[nsheet], "_D"))

District_D22 <- get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `County Code`, `District Code`), SchoolYear="2022-2023") %>%
  dplyr::select(-`County Code`, -`County Name`, -`District Code`)


url <- "https://www.nj.gov/education/doedata/enr/enr22/enrollment_2122.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 3
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=2))
print(paste0(sheet_names[nsheet], "_D"))

District_D21 <- get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `County Code`, `District Code`), SchoolYear="2021-2022") %>%
  dplyr::select(-`County Code`, -`County Name`, -`District Code`)



url <- "https://www.nj.gov/education/doedata/enr/enr21/enrollment_2021.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 3
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=2))
print(paste0(sheet_names[nsheet], "_D"))

District_D20 <- get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `County Code`, `District Code`), SchoolYear="2020-2021") %>%
  dplyr::select(-`County Code`, -`County Name`, -`District Code`)



url <- "https://www.nj.gov/education/doedata/enr/enr20/enrollment_1920.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 3
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=2))
print(paste0(sheet_names[nsheet], "_D"))

District_D19 <- get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `County Code`, `District Code`), SchoolYear="2019-2020") %>%
  dplyr::select(-`County Code`, -`County Name`, -`District Code`)

colnames(District_D19)

"""Things get different here"""

url <- "https://www.nj.gov/education/doedata/enr/enr19/enrollment_1819.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=2))
print(paste0(sheet_names[nsheet], "_D"))

District_D18 <- get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(School_Name=="District Total", Grade_Level=="Total", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", County_ID, Dist_ID), SchoolYear="2018-2019") %>%
  dplyr::select(-County_ID, -County_Name, -Dist_ID, -School_ID, -School_Name)



url <- "https://www.nj.gov/education/doedata/enr/enr18/enrollment_1718.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=1))
print(paste0(sheet_names[nsheet], "_D"))

District_D17 <-
  get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(School_Name=="District Total", Grade_Level=="Total", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", County_ID, Dist_ID), SchoolYear="2017-2018") %>%
  dplyr::select(-County_ID, -County_Name, -Dist_ID, -School_ID, -School_Name)

colnames(District_D17)

url <- "https://www.nj.gov/education/doedata/enr/enr17/enrollment_1617.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=0))
print(paste0(sheet_names[nsheet], "_D"))

District_D16 <-
  get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(SCHOOL_NAME=="District Total", GRADE_LEVEL=="TOTAL", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_ID, DIST_ID), SchoolYear="2016-2017") %>%
  dplyr::select(-COUNTY_ID, -COUNTY_NAME, -DIST_ID, -SCHOOL_ID, -SCHOOL_NAME)

colnames(District_D16)



url <- "https://www.nj.gov/education/doedata/enr/enr16/enrollment_1516.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=0))
print(paste0(sheet_names[nsheet], "_D"))

District_D15 <-
  get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(SCHOOL_NAME=="District Total", GRADE_LEVEL=="TOTAL", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_ID, DIST_ID), SchoolYear="2015-2016") %>%
  dplyr::select(-COUNTY_ID, -COUNTY_NAME, -DIST_ID, -SCHOOL_ID, -SCHOOL_NAME)

colnames(District_D15)



url <- "https://www.nj.gov/education/doedata/enr/enr15/enrollment_1415.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=0))
print(paste0(sheet_names[nsheet], "_D"))

District_D14 <-
  get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(SCHOOL_NAME=="District Total", GRADE_LEVEL=="TOTAL", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_ID, DIST_ID), SchoolYear="2014-2015") %>%
  dplyr::select(-COUNTY_ID, -COUNTY_NAME, -DIST_ID, -SCHOOL_ID, -SCHOOL_NAME)

colnames(District_D14)



url <- "https://www.nj.gov/education/doedata/enr/enr14/enrollment_1314.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=0))
print(paste0(sheet_names[nsheet], "_D"))

District_D13 <-
  get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(SCHOOL_NAME=="District Total", GRADE_LEVEL=="TOTAL", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", COUNTY_ID, DIST_ID), SchoolYear="2013-2014") %>%
  dplyr::select(-COUNTY_ID, -COUNTY_NAME, -DIST_ID, -SCHOOL_ID, -SCHOOL_NAME)



url <- "https://www.nj.gov/education/doedata/enr/enr13/enrollment_1213.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=0))
print(paste0(sheet_names[nsheet], "_D"))

District_D12 <-
  get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(`SCHOOL NAME`=="District Total", GRADE_LEVEL=="TOTAL", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `COUNTY CODE`, `DISTRICT CODE`), SchoolYear="2012-2013") %>%
  dplyr::select(-`COUNTY CODE`, -`DISTRICT CODE`, -`COUNTY NAME`, -`SCHOOL CODE`, -`SCHOOL NAME`)

colnames(District_D12)



url <- "https://www.nj.gov/education/doedata/enr/enr12/enrollment_1112.zip"

temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file, mode = "wb")
out <- unzip(temp_file, exdir = tempdir())
sheet_names <- excel_sheets(out)
print(sheet_names)

nsheet <- 1
assign(paste0(sheet_names[nsheet], "_D"), read_excel(out, sheet=sheet_names[nsheet], skip=0))
print(paste0(sheet_names[nsheet], "_D"))

District_D11 <-
  get(paste0(sheet_names[nsheet], "_D")) %>%
  dplyr::filter(`School Name`=="District Total", PRGCODE=="55") %>%
  dplyr::mutate(ST_LEAID=paste0("NJ-", `COUNTY_ID`, `DIST_ID`), SchoolYear="2011-2012") %>%
  dplyr::select(-`COUNTY_ID`, -`DIST_ID`, -`County Name`, -`SCHOOL_ID`, -`School Name`)

colnames(District_D11)

ls()

enr_19_23 <- bind_rows(
  District_D23 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District Name`, TotalEnrollment=`Total Enrollment`),
  District_D22 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District Name`, TotalEnrollment=`Total Enrollment`),
  District_D21 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District Name`, TotalEnrollment=`Total Enrollment`),
  District_D20 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District Name`, TotalEnrollment=`Total Enrollment`),
  District_D19 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District Name`, TotalEnrollment=`Total Enrollment`)
)

str(enr_19_23)

enr_11_22 <- bind_rows(
  District_D18 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District_Name`, TotalEnrollment=`Row_Total`),
  District_D17 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District_Name`, TotalEnrollment=`Row_Total`),
  District_D16 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`LEA_NAME`, TotalEnrollment=`ROW_TOTAL`),
  District_D15 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`LEA_NAME`, TotalEnrollment=`ROW_TOTAL`),
  District_D14 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`LEA_NAME`, TotalEnrollment=`ROW_TOTAL`),
  District_D13 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`LEA_NAME`, TotalEnrollment=`ROW_TOTAL`),
  District_D12 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`DISTRICT NAME`, TotalEnrollment=`ROW_TOTAL`),
  District_D11 %>% dplyr::select(ST_LEAID, SchoolYear, DistrictName=`District Name`, TotalEnrollment=`ROW_TOTAL`)
)

str(enr_11_22)

enr_all <- bind_rows(enr_11_22, enr_19_23)

sheet_write(enr_all, ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="enr_all")

"""## Analysis"""

enr_all <- read_sheet(ss="12WxkM2ieGB_r-A0O75tsSRBA0OpYQWZICGZE8GgTNQQ", sheet="enr_all")

district_stleaid_colors <-  c("#4169E1", "#1F2868", "#8640C4", "#004500", "lightgrey")
names(district_stleaid_colors) <-c(fh_staid, ls_staid, rums_staid, shrews_staid, "Other")

enr_all <- enr_all %>%
  dplyr::mutate(dist_colors = case_when(
    ST_LEAID %in% names(district_stleaid_colors) ~ ST_LEAID,
    TRUE ~ "Other"
  ))

comb$euclidLT100SizeLT2000 <- comb$euclid_score<100 & as.numeric(comb$TotalEnrollment)<2000

enr_all$euclidLT100SizeLT2000 <- enr_all$ST_LEAID %in% comb$ST_LEAID[comb$euclidLT100SizeLT2000]

options(repr.plot.width=16, repr.plot.height=15)

enr_all %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  
  {
    
    print( ggplot(data=., aes(x=SchoolYear, y=TotalEnrollment, group=ST_LEAID, color=dist_colors)) +
             geom_line(aes(alpha = 1), size = 2) +
             geom_point(aes(alpha = 1), size = 4) +
             scale_x_discrete(expand = c(.2, .2), labels = sort(unique(.$SchoolYear))) +
             #scale_y_continuous(labels=1:4, breaks=4:1) +
             geom_point(color = "#FFFFFF", size = 1) +
             geom_text(data = . %>% filter(SchoolYear == "2011-2012"),
                       aes(label = str_to_title(DistrictName), x = 0.5) , hjust = .85, fontface = "bold", color = "#888888", size = 4) +
             geom_text(data = . %>% filter(SchoolYear == "2023-2024"),
                       aes(label = DistrictName, x = 13.5) , hjust = 0.15, fontface = "bold", color = "#888888", size = 4) +
             labs(x = "",
                  y = "",
                  title = "Total Enrollment",
                  subtitle = "") +
             theme_minimal() +
             theme(axis.text.x = element_text(size=16, vjust=0.5, hjust=0.5, color = "black", angle = 20)) +
             scale_color_manual(values=district_stleaid_colors, guide="none") +
             scale_alpha(guide="none"))
  }

options(repr.plot.width=12, repr.plot.height=8)

enr_all %>%
  dplyr::filter(euclidLT100SizeLT2000) %>%
  dplyr::arrange(ST_LEAID, SchoolYear) %>%
  dplyr::group_by(ST_LEAID) %>%
  dplyr::mutate(EnrDiff= TotalEnrollment - lag(TotalEnrollment, default = first(TotalEnrollment))) %>%
  dplyr::mutate(PercentChange = (TotalEnrollment - lag(TotalEnrollment)) / lag(TotalEnrollment) * 100) %>%
  dplyr::filter(ST_LEAID %in% names(district_stleaid_colors) ) %>%
  
  {
    
    print( ggplot(data=., aes(x=SchoolYear, y=PercentChange, group=ST_LEAID, color=dist_colors)) +
             geom_line(aes(alpha = 1), size = 2) +
             geom_point(aes(alpha = 1), size = 4) +
             scale_x_discrete(expand = c(.2, .2), labels = sort(unique(.$SchoolYear))) +
             #scale_y_continuous(labels=1:4, breaks=4:1) +
             geom_point(color = "#FFFFFF", size = 1) +
             geom_text(data = . %>% filter(SchoolYear == "2011-2012"),
                       aes(label = str_to_title(DistrictName), x = 0.5) , hjust = .85, fontface = "bold", color = "#888888", size = 4) +
             geom_text(data = . %>% filter(SchoolYear == "2023-2024"),
                       aes(label = DistrictName, x = 13.5) , hjust = 0.15, fontface = "bold", color = "#888888", size = 4) +
             labs(x = "",
                  y = "",
                  title = "Total Enrollment % Changes",
                  subtitle = "") +
             theme_minimal() +
             theme(axis.text.x = element_text(size=16, vjust=0.5, hjust=0.5, color = "black", angle = 20)) +
             scale_color_manual(values=district_stleaid_colors, guide="none") +
             scale_alpha(guide="none") +
             geom_hline(yintercept = 0, color="red"))
  }





#### Private School Universe ####



#### Misc ####

options(repr.plot.width=10, repr.plot.height=10)

comb %>%
  dplyr::filter(euclid_score < 20) %>%
  dplyr::mutate(TotalEnrollment=as.numeric(TotalEnrollment)) %>%
  
  {
    ggplot(data=., aes(x=per_pupil_cost, y=ELA_ME_District, color=dist_colors)) +
      geom_point(aes(size=TotalEnrollment)) +
      stat_poly_line(method="rlm:M", aes(weight=TotalEnrollment)) +
      stat_poly_eq(use_label(c("eq")), method="rlm:M",  label.x = .8, label.y=1, color="black") +
      #stat_smooth(method=function(formula, data, weights=weight) rlm(formula, data, weights=weight, method="MM"), fullrange=TRUE) +
      theme_minimal() +
      geom_text_repel(aes(label=.data$district_name)) +
      scale_color_manual(values=district_name_colors, guide="none") +
      labs(x="Per Pupil Cost", y="ELA Meets/Exceeds") +
      ggtitle("ELA Meets/Exceeds by Per Pupil Cost", subtitle = paste0("SY2022-23; N = ", sum(!is.na(.$ELA_ME_District)))) +
      scale_size_continuous(guide="none")
  }





